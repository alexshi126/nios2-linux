#!/usr/bin/expect

source ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit."
source ../spawn_kermit.exp

step "Reboot the kernel."
source ../reboot_kernel.exp

step "Starting test."

set case_num 0

set timeout 8
send "cd /bin\r" 
expect "root:/bin>"

set timeout 100

incr case_num
send -s "taskset 1 ./ex1\r"
while 1 {
    expect {
        "join b succeeded 0" {         
            send_user "Run ex1 finished.\n"
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send -s "taskset 1 ./ex2\r"
while 1 {
    expect {
        "> 9999" {         
            send_user "Run ex2 finished.\n"
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send -s "taskset 1 ./ex3\r"
while 1 {
    expect {
        -re "It took .*tries to find the number" {         
            send_user "Run ex3 finished.\n"
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send -s "taskset 1 ./ex4\r"
while 1 {
    expect {
        -re "Thread .* freeing buffer at .*" {         
            send_user "Run ex4 finished.\n"
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send -s "taskset 1 ./ex5\r"
while 1 {
    expect {
        "> 9999" {         
            send_user "Run ex5 finished.\n"
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send -s "taskset 1 ./ex6\r"
while 1 {
    expect {
        "count = 1999" {         
            send_user "Run ex6 finished.\n"
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send -s "taskset 1 ./ex7\r"
while 1 {
    expect {
        -re "waiting .*count = 19" {         
            send_user "Run ex7 finished.\n"
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 15
send -s "taskset 1 ./ptest\r"
while 1 {
    expect {
        -re "PASS" {
            send_user "Run ptest finished.\n"
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"
log_file
