--- samba-3.0.25a/source/client/smbmnt.c
+++ samba-3.0.25a/source/client/smbmnt.c
@@ -27,12 +27,25 @@
 #include <mntent.h>
 #include <sys/utsname.h>
 
+/*
+ * We don't need these and they conflict with other includes :-(
+ */
+#if 0
 #include <asm/types.h>
 #include <asm/posix_types.h>
 #include <linux/smb.h>
+#endif
+
+/*
+ * This define is here so that we don't re-define __kernel_type_t from the
+ * kernel headers.
+ * It is already defined in bits/ipc.h in uClibc.
+ */
+#define __kernel_key_t __my_kernel_key_t
 #include <linux/smb_mount.h>
-#include <asm/unistd.h>
+#undef __kernel_key_t
 
+/*#include <asm/unistd.h>*/
 #ifndef	MS_MGC_VAL
 /* This may look strange but MS_MGC_VAL is what we are looking for and
 	is what we need from <linux/fs.h> under libc systems and is
@@ -288,12 +301,14 @@
 		return -1;
 	}
 	
-        if ((fd = open(MOUNTED"~", O_RDWR|O_CREAT|O_EXCL, 0600)) == -1)
+#ifndef EMBED
+        if ((fd = open("/var/lock/mtab~", O_RDWR|O_CREAT|O_EXCL, 0600)) == -1)
         {
-                fprintf(stderr, "Can't get "MOUNTED"~ lock file");
+                fprintf(stderr, "Can't get /var/lock/mtab~ lock file");
                 return 1;
         }
         close(fd);
+#endif
 	
         if ((mtab = setmntent(MOUNTED, "a+")) == NULL)
         {
@@ -313,11 +328,13 @@
         }
         endmntent(mtab);
 
-        if (unlink(MOUNTED"~") == -1)
+#ifndef EMBED
+        if (unlink("/var/lock/mtab~") == -1)
         {
-                fprintf(stderr, "Can't remove "MOUNTED"~");
+                fprintf(stderr, "Can't remove /var/lock/mtab~");
                 return 1;
         }
+#endif
 
 	return 0;
 }	
--- samba-3.0.25a/source/client/smbmount.c
+++ samba-3.0.25a/source/client/smbmount.c
@@ -21,6 +21,8 @@
 #include "includes.h"
 
 #include <mntent.h>
+#define __kernel_key_t __smb_____kernel_key_t
+#define _LINUX_TIME_H
 #include <asm/types.h>
 #include <linux/smb_fs.h>
 
@@ -54,6 +55,10 @@
 static BOOL smbfs_has_unicode = False;
 static BOOL smbfs_has_lfs = False;
 
+#ifdef __uClinux__
+#define CMD_CHILD "smbmount_child"
+#endif
+
 static void usage(void);
 
 static void exit_parent(int sig)
@@ -62,6 +67,49 @@
 	exit(0);
 }
 
+#ifdef __uClinux__
+static void daemonize(int argc, char **argv)
+{
+	char *name = (char *)malloc((strlen(CMD_CHILD)+1)*sizeof(char));
+	char *oldname;
+	pid_t pid;
+	int status;
+  
+	if (name == NULL) {
+		fprintf(stderr, "Failed to allocate memory for new argv\n");
+		exit(1);
+	}
+
+	//Replace process name
+	oldname = argv[0];
+	argv[0] = name;
+	strncpy(name, CMD_CHILD, strlen(CMD_CHILD));
+	name[strlen(CMD_CHILD)] = 0;
+	signal(SIGTERM, exit_parent);
+	pid = vfork();
+	if (pid == 0) { 
+		execvp(oldname, argv);
+		fprintf(stderr, "Failed to exec %s:%s\n", oldname, strerror(errno));
+		exit(1);
+	} else if (pid == -1) {
+		perror("Failed to vfork: ");
+		exit(1);
+	}
+
+	//parent
+	while( 1 ) {
+		if(waitpid(pid, &status, 0 ) < 0 ) {
+			if( EINTR == errno )
+				continue;
+			status = errno;
+		}
+		break;
+	}
+
+	/* If we get here - the child exited with some error status */
+	exit(status);
+}
+#else
 static void daemonize(void)
 {
 	int j, status;
@@ -95,6 +143,7 @@
 	signal( SIGTERM, SIG_DFL );
 	chdir("/");
 }
+#endif
 
 static void close_our_files(int client_fd)
 {
@@ -273,8 +322,8 @@
                 return;
         }
 
-        if ((fd = open(MOUNTED"~", O_RDWR|O_CREAT|O_EXCL, 0600)) == -1) {
-                DEBUG(0,("%d: Can't get "MOUNTED"~ lock file", sys_getpid()));
+        if ((fd = open("/var/lock/mtab~", O_RDWR|O_CREAT|O_EXCL, 0600)) == -1) {
+                DEBUG(0,("%d: Can't get /var/lock/mtab~ lock file", sys_getpid()));
                 return;
         }
 
@@ -285,9 +334,11 @@
 			 sys_getpid(), strerror(errno)));
                 return;
         }
-
+#if CONFIG_SNAPGEAR 
+#define MOUNTED_TMP "/etc/config/mtab.tmp"
+#else
 #define MOUNTED_TMP MOUNTED".tmp"
-
+#endif
         if ((new_mtab = setmntent(MOUNTED_TMP, "w")) == NULL) {
                 DEBUG(0,("%d: Can't open " MOUNTED_TMP ": %s\n",
 			 sys_getpid(), strerror(errno)));
@@ -317,8 +368,8 @@
                 return;
         }
 
-        if (unlink(MOUNTED"~") == -1) {
-                DEBUG(0,("%d: Can't remove "MOUNTED"~", sys_getpid()));
+        if (unlink("/var/lock/mtab~") == -1) {
+                DEBUG(0,("%d: Can't remove /var/lock/mtab~", sys_getpid()));
                 return;
         }
 }
@@ -451,11 +502,13 @@
 		exit(1);
 	}
 
+#ifndef __uClinux__
 	/*
 		Set up to return as a daemon child and wait in the parent
 		until the child say it's ready...
 	*/
 	daemonize();
+#endif
 
 	pstrcpy(svc2, service);
 	string_replace(svc2, '\\','/');
@@ -498,7 +551,11 @@
 		args[i++] = options;
 	}
 
+#ifdef __uClinux__
+	if (vfork() == 0) {
+#else
 	if (sys_fork() == 0) {
+#endif
 		char *smbmnt_path;
 
 		asprintf(&smbmnt_path, "%s/smbmnt", dyn_BINDIR);
@@ -865,6 +922,13 @@
 {
 	char *p;
 
+#ifdef __uClinux__
+	//Check if we're the child, if not create one.
+	//otherwise proceed with mount.
+	if (strcmp(argv[0], CMD_CHILD))
+		daemonize(argc, argv);
+#endif
+
 	DEBUGLEVEL = 1;
 
 	load_case_tables();
--- samba-3.0.25a/source/client/smbumount.c
+++ samba-3.0.25a/source/client/smbumount.c
@@ -10,7 +10,8 @@
 #include "includes.h"
 
 #include <mntent.h>
-
+#define __kernel_key_t __smb_____kernel_key_t
+#define _LINUX_TIME_H
 #include <asm/types.h>
 #include <asm/posix_types.h>
 #include <linux/smb.h>
--- samba-3.0.25a/source/configure
+++ samba-3.0.25a/source/configure
@@ -2383,9 +2383,9 @@
 SAMBA_CONFIGURE_CPPFLAGS="${SAMBA_CPPFLAGS} -I${srcdir-.}/popt"
 
 ## cleanup the $(srcdir) in the Makefile if we are outside of the tree
-if test "x${srcdir-.}" != "x."; then
-	SAMBA_CPPFLAGS=`echo ${SAMBA_CPPFLAGS} | sed -e "s;${srcdir};\$\(srcdir\);g"`
-fi
+#if test "x${srcdir-.}" != "x."; then
+#	SAMBA_CPPFLAGS=`echo ${SAMBA_CPPFLAGS} | sed -e "s;${srcdir};\$\(srcdir\);g"`
+#fi
 
 
 
@@ -10508,7 +10508,7 @@
 fi
 
 
-LD=ld
+LD=`${ac_cv_prog_CC} -print-prog-name=ld`
 { echo "$as_me:$LINENO: checking if the linker ($LD) is GNU ld" >&5
 echo $ECHO_N "checking if the linker ($LD) is GNU ld... $ECHO_C" >&6; }
 if test "${ac_cv_prog_gnu_ld+set}" = set; then
@@ -11607,9 +11607,13 @@
 # Tests for linux LFS support. Need kernel 2.4 and glibc2.2 or greater support.
 #
     *linux*)
+        old_CPPFLAGS="$CPPFLAGS"
         { echo "$as_me:$LINENO: checking for LFS support" >&5
 echo $ECHO_N "checking for LFS support... $ECHO_C" >&6; }
-        old_CPPFLAGS="$CPPFLAGS"
+if test "${LINUX_LFS_SUPPORT+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+
         CPPFLAGS="-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE $CPPFLAGS"
        if test "$cross_compiling" = yes; then
   LINUX_LFS_SUPPORT=cross
@@ -11691,6 +11695,9 @@
 fi
 
 
+fi
+{ echo "$as_me:$LINENO: result: $LINUX_LFS_SUPPORT" >&5
+echo "${ECHO_T}$LINUX_LFS_SUPPORT" >&6; }
 	CPPFLAGS="$old_CPPFLAGS"
 	if test x$LINUX_LFS_SUPPORT = xyes ; then
 		CPPFLAGS="-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE $CPPFLAGS"
@@ -34334,6 +34341,12 @@
 case "$host_os" in
     *linux*)
        # glibc <= 2.3.2 has a broken getgrouplist
+       { echo "$as_me:$LINENO: checking for getgrouplist" >&5
+echo $ECHO_N "checking for getgrouplist... $ECHO_C" >&6; }
+if test "${samba_cv_have_getgrouplist+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+
        if test "$cross_compiling" = yes; then
   { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
 See \`config.log' for more details." >&5
@@ -34385,20 +34398,23 @@
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; }; then
-  linux_getgrouplist_ok=yes
+  samba_cv_have_getgrouplist=yes
 else
   echo "$as_me: program exited with status $ac_status" >&5
 echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
 ( exit $ac_status )
-linux_getgrouplist_ok=no
+samba_cv_have_getgrouplist=no
 fi
 rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
 fi
 
 
-       if test x"$linux_getgrouplist_ok" = x"yes"; then
+fi
+{ echo "$as_me:$LINENO: result: $samba_cv_have_getgrouplist" >&5
+echo "${ECHO_T}$samba_cv_have_getgrouplist" >&6; }
+       if test x"$samba_cv_have_getgrouplist" = x"yes"; then
 
 cat >>confdefs.h <<\_ACEOF
 #define HAVE_GETGROUPLIST 1
--- samba-3.0.25a/source/configure.in
+++ samba-3.0.25a/source/configure.in
@@ -240,9 +240,9 @@
 SAMBA_CONFIGURE_CPPFLAGS="${SAMBA_CPPFLAGS} -I${srcdir-.}/popt"
 
 ## cleanup the $(srcdir) in the Makefile if we are outside of the tree
-if test "x${srcdir-.}" != "x."; then
-	SAMBA_CPPFLAGS=`echo ${SAMBA_CPPFLAGS} | sed -e "s;${srcdir};\$\(srcdir\);g"`
-fi
+#if test "x${srcdir-.}" != "x."; then
+#	SAMBA_CPPFLAGS=`echo ${SAMBA_CPPFLAGS} | sed -e "s;${srcdir};\$\(srcdir\);g"`
+#fi
 
 AC_SUBST(configdir)
 AC_SUBST(lockdir)
@@ -432,7 +432,7 @@
 AC_CHECK_TOOL(AR, ar)
 
 dnl Check if we use GNU ld
-LD=ld
+LD=`${ac_cv_prog_CC} -print-prog-name=ld`
 AC_PROG_LD_GNU
 
 dnl Certain versions of GNU ld the default is not to have the
@@ -754,8 +754,8 @@
 # Tests for linux LFS support. Need kernel 2.4 and glibc2.2 or greater support.
 #
     *linux*)
-        AC_MSG_CHECKING([for LFS support])
         old_CPPFLAGS="$CPPFLAGS"
+        AC_CACHE_CHECK([for LFS support],LINUX_LFS_SUPPORT, [
         CPPFLAGS="-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE $CPPFLAGS"
        AC_TRY_RUN([
 #include <unistd.h>
@@ -793,7 +793,7 @@
        exit(1);
 #endif
 }
-], [LINUX_LFS_SUPPORT=yes], [LINUX_LFS_SUPPORT=no], [LINUX_LFS_SUPPORT=cross])
+], [LINUX_LFS_SUPPORT=yes], [LINUX_LFS_SUPPORT=no], [LINUX_LFS_SUPPORT=cross])])
 	CPPFLAGS="$old_CPPFLAGS"
 	if test x$LINUX_LFS_SUPPORT = xyes ; then
 		CPPFLAGS="-D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE $CPPFLAGS"
@@ -1375,6 +1375,7 @@
 case "$host_os" in
     *linux*)
        # glibc <= 2.3.2 has a broken getgrouplist
+       AC_CACHE_CHECK([for getgrouplist],samba_cv_have_getgrouplist,[
        AC_TRY_RUN([
 #include <unistd.h>
 #include <sys/utsname.h>
@@ -1391,8 +1392,8 @@
 #endif
        exit(0);
 }
-], [linux_getgrouplist_ok=yes], [linux_getgrouplist_ok=no])
-       if test x"$linux_getgrouplist_ok" = x"yes"; then
+],samba_cv_have_getgrouplist=yes,samba_cv_have_getgrouplist=no)])
+       if test x"$samba_cv_have_getgrouplist" = x"yes"; then
           AC_DEFINE(HAVE_GETGROUPLIST, 1, [Have good getgrouplist])
        fi
        ;;
--- samba-3.0.25a/source/lib/popt_common.c
+++ samba-3.0.25a/source/lib/popt_common.c
@@ -54,7 +54,11 @@
 	else 
 		pname++;
 
+#ifdef EMBED
+	pstr_sprintf(logfile, "%s/smb_log.%s", arg, pname);
+#else
 	pstr_sprintf(logfile, "%s/log.%s", arg, pname);
+#endif
 	lp_set_logfile(logfile);
 }
 
--- samba-3.0.25a/source/Makefile.in
+++ samba-3.0.25a/source/Makefile.in
@@ -963,13 +963,13 @@
 
 bin/smbd@EXEEXT@: proto_exists $(SMBD_OBJ) @BUILD_POPT@ bin/.dummy
 	@echo Linking $@
-	@$(CC) $(FLAGS) -o $@ $(SMBD_OBJ) $(LDFLAGS) $(LDAP_LIBS) \
+	$(CC) $(FLAGS) -o $@ $(SMBD_OBJ) $(LDFLAGS) $(LDAP_LIBS) \
 		$(KRB5LIBS) $(DYNEXP) $(PRINT_LIBS) $(AUTH_LIBS) \
 		$(ACL_LIBS) $(PASSDB_LIBS) $(LIBS) @POPTLIBS@ @SMBD_LIBS@
 
 bin/nmbd@EXEEXT@: proto_exists $(NMBD_OBJ) @BUILD_POPT@ bin/.dummy
 	@echo Linking $@
-	@$(CC) $(FLAGS) -o $@ $(NMBD_OBJ) $(LDFLAGS) $(DYNEXP) $(LIBS) @POPTLIBS@ $(KRB5LIBS) $(LDAP_LIBS)
+	$(CC) $(FLAGS) -o $@ $(NMBD_OBJ) $(LDFLAGS) $(DYNEXP) $(LIBS) @POPTLIBS@ $(KRB5LIBS) $(LDAP_LIBS)
 
 bin/swat@EXEEXT@: proto_exists $(SWAT_OBJ) @BUILD_POPT@ bin/.dummy
 	@echo Linking $@
--- samba-3.0.25a/source/modules/vfs_default.c
+++ samba-3.0.25a/source/modules/vfs_default.c
@@ -813,7 +813,7 @@
 
 	START_PROFILE(syscall_linux_setlease);
 
-#ifdef LINUX
+#ifdef HAVE_KERNEL_OPLOCKS_LINUX
 	/* first set the signal handler */
 	if(linux_set_lease_sighandler(fd) == -1)
 		return -1;
--- samba-3.0.25a/source/nmbd/nmbd.c
+++ samba-3.0.25a/source/nmbd/nmbd.c
@@ -654,7 +654,11 @@
 	sys_srandom(time(NULL) ^ sys_getpid());
 	
 	if (!override_logfile) {
+#ifdef EMBED
+		slprintf(logfile, sizeof(logfile)-1, "%s/smb_log.nmbd", dyn_LOGFILEBASE);
+#else
 		slprintf(logfile, sizeof(logfile)-1, "%s/log.nmbd", dyn_LOGFILEBASE);
+#endif
 		lp_set_logfile(logfile);
 	}
 	
