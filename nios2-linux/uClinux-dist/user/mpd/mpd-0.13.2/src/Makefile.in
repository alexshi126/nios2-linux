# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_LIBS = @ALSA_LIBS@
AMTAR = @AMTAR@
AO_CFLAGS = @AO_CFLAGS@
AO_LIBS = @AO_LIBS@
AR = @AR@
AS = @AS@
AUDIOFILE_CFLAGS = @AUDIOFILE_CFLAGS@
AUDIOFILE_CONFIG = @AUDIOFILE_CONFIG@
AUDIOFILE_LIBS = @AUDIOFILE_LIBS@
AWK = @AWK@
CC = @CC@
CXX = @CXX@
CXXCPP = @CXXCPP@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBFLAC_CFLAGS = @LIBFLAC_CFLAGS@
LIBFLAC_LIBS = @LIBFLAC_LIBS@
LIBMIKMOD_CFLAGS = @LIBMIKMOD_CFLAGS@
LIBMIKMOD_CONFIG = @LIBMIKMOD_CONFIG@
LIBMIKMOD_LDADD = @LIBMIKMOD_LDADD@
LIBMIKMOD_LIBS = @LIBMIKMOD_LIBS@
LIBOGGFLAC_CFLAGS = @LIBOGGFLAC_CFLAGS@
LIBOGGFLAC_LIBS = @LIBOGGFLAC_LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MP4FF_LIB = @MP4FF_LIB@
MP4FF_SUBDIR = @MP4FF_SUBDIR@
MPD_CFLAGS = @MPD_CFLAGS@
MPD_LIBS = @MPD_LIBS@
OBJDUMP = @OBJDUMP@
OGG_CFLAGS = @OGG_CFLAGS@
OGG_LIBS = @OGG_LIBS@
PACKAGE = @PACKAGE@
PKGCONFIG = @PKGCONFIG@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
RC = @RC@
SHOUTCONFIG = @SHOUTCONFIG@
STRIP = @STRIP@
VERSION = @VERSION@
VORBISENC_LIBS = @VORBISENC_LIBS@
VORBISFILE_LIBS = @VORBISFILE_LIBS@
VORBIS_CFLAGS = @VORBIS_CFLAGS@
VORBIS_LIBS = @VORBIS_LIBS@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
bin_PROGRAMS = mpd
SUBDIRS = $(MP4FF_SUBDIR)

mpd_audioOutputs = \
	audioOutputs/audioOutput_alsa.c \
	audioOutputs/audioOutput_ao.c \
	audioOutputs/audioOutput_oss.c \
	audioOutputs/audioOutput_osx.c \
	audioOutputs/audioOutput_pulse.c \
	audioOutputs/audioOutput_mvp.c \
	audioOutputs/audioOutput_shout.c \
	audioOutputs/audioOutput_jack.c


mpd_inputPlugins = \
	inputPlugins/_flac_common.c \
	inputPlugins/_ogg_common.c \
	inputPlugins/oggflac_plugin.c \
	inputPlugins/oggvorbis_plugin.c \
	inputPlugins/aac_plugin.c \
	inputPlugins/audiofile_plugin.c \
	inputPlugins/flac_plugin.c \
	inputPlugins/mod_plugin.c \
	inputPlugins/mp3_plugin.c \
	inputPlugins/mp4_plugin.c \
	inputPlugins/mpc_plugin.c


mpd_headers = \
	ack.h \
	audio.h \
	audioOutput.h \
	buffer2array.h \
	charConv.h \
	command.h \
	conf.h \
	dbUtils.h \
	decode.h \
	directory.h \
	gcc.h \
	inputPlugin.h \
	inputPlugins/_flac_common.h \
	inputPlugins/_ogg_common.h \
	inputStream.h \
	inputStream_file.h \
	inputStream_http.h \
	interface.h \
	list.h \
	listen.h \
	log.h \
	ls.h \
	metadataChunk.h \
	mpd_types.h \
	myfprintf.h \
	normalize.h \
	compress.h \
	outputBuffer.h \
	path.h \
	pcm_utils.h \
	permission.h \
	player.h \
	playerData.h \
	playlist.h \
	replayGain.h \
	signal_check.h \
	sig_handlers.h \
	sllist.h \
	song.h \
	state_file.h \
	stats.h \
	tag.h \
	tagTracker.h \
	tree.h \
	utf8.h \
	utils.h \
	volume.h \
	ioops.h \
	zeroconf.h \
	locate.h \
	storedPlaylist.h


mpd_SOURCES = \
	$(mpd_headers) \
	$(mpd_audioOutputs) \
	$(mpd_inputPlugins) \
	audio.c \
	audioOutput.c \
	buffer2array.c \
	charConv.c \
	command.c \
	conf.c \
	dbUtils.c \
	decode.c \
	directory.c \
	inputPlugin.c \
	inputStream.c \
	inputStream_file.c \
	inputStream_http.c \
	interface.c \
	list.c \
	listen.c \
	log.c \
	ls.c \
	main.c \
	metadataChunk.c \
	myfprintf.c \
	normalize.c \
	compress.c \
	outputBuffer.c \
	path.c \
	pcm_utils.c \
	permission.c \
	player.c \
	playerData.c \
	playlist.c \
	replayGain.c \
	sig_handlers.c \
	signal_check.c \
	sllist.c \
	song.c \
	state_file.c \
	stats.c \
	tag.c \
	tagTracker.c \
	tree.c \
	utils.c \
	volume.c \
	utf8.c \
	zeroconf.c \
	locate.c \
	storedPlaylist.c


mpd_CFLAGS = $(MPD_CFLAGS)
mpd_LDADD = $(MPD_LIBS) $(MP4FF_LIB)

DIST_SUBDIRS = mp4ff

# sparse is a semantic parser
# URL: git://www.kernel.org/pub/scm/devel/sparse/sparse.git
SPARSE = sparse
SPARSE_FLAGS = 
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = mpd$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am__objects_1 =
am__objects_2 = mpd-audioOutput_alsa.$(OBJEXT) \
	mpd-audioOutput_ao.$(OBJEXT) mpd-audioOutput_oss.$(OBJEXT) \
	mpd-audioOutput_osx.$(OBJEXT) mpd-audioOutput_pulse.$(OBJEXT) \
	mpd-audioOutput_mvp.$(OBJEXT) mpd-audioOutput_shout.$(OBJEXT) \
	mpd-audioOutput_jack.$(OBJEXT)
am__objects_3 = mpd-_flac_common.$(OBJEXT) mpd-_ogg_common.$(OBJEXT) \
	mpd-oggflac_plugin.$(OBJEXT) mpd-oggvorbis_plugin.$(OBJEXT) \
	mpd-aac_plugin.$(OBJEXT) mpd-audiofile_plugin.$(OBJEXT) \
	mpd-flac_plugin.$(OBJEXT) mpd-mod_plugin.$(OBJEXT) \
	mpd-mp3_plugin.$(OBJEXT) mpd-mp4_plugin.$(OBJEXT) \
	mpd-mpc_plugin.$(OBJEXT)
am_mpd_OBJECTS = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	mpd-audio.$(OBJEXT) mpd-audioOutput.$(OBJEXT) \
	mpd-buffer2array.$(OBJEXT) mpd-charConv.$(OBJEXT) \
	mpd-command.$(OBJEXT) mpd-conf.$(OBJEXT) mpd-dbUtils.$(OBJEXT) \
	mpd-decode.$(OBJEXT) mpd-directory.$(OBJEXT) \
	mpd-inputPlugin.$(OBJEXT) mpd-inputStream.$(OBJEXT) \
	mpd-inputStream_file.$(OBJEXT) mpd-inputStream_http.$(OBJEXT) \
	mpd-interface.$(OBJEXT) mpd-list.$(OBJEXT) mpd-listen.$(OBJEXT) \
	mpd-log.$(OBJEXT) mpd-ls.$(OBJEXT) mpd-main.$(OBJEXT) \
	mpd-metadataChunk.$(OBJEXT) mpd-myfprintf.$(OBJEXT) \
	mpd-normalize.$(OBJEXT) mpd-compress.$(OBJEXT) \
	mpd-outputBuffer.$(OBJEXT) mpd-path.$(OBJEXT) \
	mpd-pcm_utils.$(OBJEXT) mpd-permission.$(OBJEXT) \
	mpd-player.$(OBJEXT) mpd-playerData.$(OBJEXT) \
	mpd-playlist.$(OBJEXT) mpd-replayGain.$(OBJEXT) \
	mpd-sig_handlers.$(OBJEXT) mpd-signal_check.$(OBJEXT) \
	mpd-sllist.$(OBJEXT) mpd-song.$(OBJEXT) \
	mpd-state_file.$(OBJEXT) mpd-stats.$(OBJEXT) mpd-tag.$(OBJEXT) \
	mpd-tagTracker.$(OBJEXT) mpd-tree.$(OBJEXT) mpd-utils.$(OBJEXT) \
	mpd-volume.$(OBJEXT) mpd-utf8.$(OBJEXT) mpd-zeroconf.$(OBJEXT) \
	mpd-locate.$(OBJEXT) mpd-storedPlaylist.$(OBJEXT)
mpd_OBJECTS = $(am_mpd_OBJECTS)
mpd_DEPENDENCIES =
mpd_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/mpd-_flac_common.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-_ogg_common.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-aac_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audio.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audioOutput.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audioOutput_alsa.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audioOutput_ao.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audioOutput_jack.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audioOutput_mvp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audioOutput_oss.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audioOutput_osx.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audioOutput_pulse.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audioOutput_shout.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-audiofile_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-buffer2array.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-charConv.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-command.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-compress.Po ./$(DEPDIR)/mpd-conf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-dbUtils.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-decode.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-directory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-flac_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-inputPlugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-inputStream.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-inputStream_file.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-inputStream_http.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-interface.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-list.Po ./$(DEPDIR)/mpd-listen.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-locate.Po ./$(DEPDIR)/mpd-log.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-ls.Po ./$(DEPDIR)/mpd-main.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-metadataChunk.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-mod_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-mp3_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-mp4_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-mpc_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-myfprintf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-normalize.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-oggflac_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-oggvorbis_plugin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-outputBuffer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-path.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-pcm_utils.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-permission.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-player.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-playerData.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-playlist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-replayGain.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-sig_handlers.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-signal_check.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-sllist.Po ./$(DEPDIR)/mpd-song.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-state_file.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-stats.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-storedPlaylist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-tag.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-tagTracker.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-tree.Po ./$(DEPDIR)/mpd-utf8.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-utils.Po ./$(DEPDIR)/mpd-volume.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mpd-zeroconf.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(mpd_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(mpd_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
mpd-audioOutput_alsa.$(OBJEXT): audioOutputs/audioOutput_alsa.c
mpd-audioOutput_ao.$(OBJEXT): audioOutputs/audioOutput_ao.c
mpd-audioOutput_oss.$(OBJEXT): audioOutputs/audioOutput_oss.c
mpd-audioOutput_osx.$(OBJEXT): audioOutputs/audioOutput_osx.c
mpd-audioOutput_pulse.$(OBJEXT): audioOutputs/audioOutput_pulse.c
mpd-audioOutput_mvp.$(OBJEXT): audioOutputs/audioOutput_mvp.c
mpd-audioOutput_shout.$(OBJEXT): audioOutputs/audioOutput_shout.c
mpd-audioOutput_jack.$(OBJEXT): audioOutputs/audioOutput_jack.c
mpd-_flac_common.$(OBJEXT): inputPlugins/_flac_common.c
mpd-_ogg_common.$(OBJEXT): inputPlugins/_ogg_common.c
mpd-oggflac_plugin.$(OBJEXT): inputPlugins/oggflac_plugin.c
mpd-oggvorbis_plugin.$(OBJEXT): inputPlugins/oggvorbis_plugin.c
mpd-aac_plugin.$(OBJEXT): inputPlugins/aac_plugin.c
mpd-audiofile_plugin.$(OBJEXT): inputPlugins/audiofile_plugin.c
mpd-flac_plugin.$(OBJEXT): inputPlugins/flac_plugin.c
mpd-mod_plugin.$(OBJEXT): inputPlugins/mod_plugin.c
mpd-mp3_plugin.$(OBJEXT): inputPlugins/mp3_plugin.c
mpd-mp4_plugin.$(OBJEXT): inputPlugins/mp4_plugin.c
mpd-mpc_plugin.$(OBJEXT): inputPlugins/mpc_plugin.c
mpd-audio.$(OBJEXT): audio.c
mpd-audioOutput.$(OBJEXT): audioOutput.c
mpd-buffer2array.$(OBJEXT): buffer2array.c
mpd-charConv.$(OBJEXT): charConv.c
mpd-command.$(OBJEXT): command.c
mpd-conf.$(OBJEXT): conf.c
mpd-dbUtils.$(OBJEXT): dbUtils.c
mpd-decode.$(OBJEXT): decode.c
mpd-directory.$(OBJEXT): directory.c
mpd-inputPlugin.$(OBJEXT): inputPlugin.c
mpd-inputStream.$(OBJEXT): inputStream.c
mpd-inputStream_file.$(OBJEXT): inputStream_file.c
mpd-inputStream_http.$(OBJEXT): inputStream_http.c
mpd-interface.$(OBJEXT): interface.c
mpd-list.$(OBJEXT): list.c
mpd-listen.$(OBJEXT): listen.c
mpd-log.$(OBJEXT): log.c
mpd-ls.$(OBJEXT): ls.c
mpd-main.$(OBJEXT): main.c
mpd-metadataChunk.$(OBJEXT): metadataChunk.c
mpd-myfprintf.$(OBJEXT): myfprintf.c
mpd-normalize.$(OBJEXT): normalize.c
mpd-compress.$(OBJEXT): compress.c
mpd-outputBuffer.$(OBJEXT): outputBuffer.c
mpd-path.$(OBJEXT): path.c
mpd-pcm_utils.$(OBJEXT): pcm_utils.c
mpd-permission.$(OBJEXT): permission.c
mpd-player.$(OBJEXT): player.c
mpd-playerData.$(OBJEXT): playerData.c
mpd-playlist.$(OBJEXT): playlist.c
mpd-replayGain.$(OBJEXT): replayGain.c
mpd-sig_handlers.$(OBJEXT): sig_handlers.c
mpd-signal_check.$(OBJEXT): signal_check.c
mpd-sllist.$(OBJEXT): sllist.c
mpd-song.$(OBJEXT): song.c
mpd-state_file.$(OBJEXT): state_file.c
mpd-stats.$(OBJEXT): stats.c
mpd-tag.$(OBJEXT): tag.c
mpd-tagTracker.$(OBJEXT): tagTracker.c
mpd-tree.$(OBJEXT): tree.c
mpd-utils.$(OBJEXT): utils.c
mpd-volume.$(OBJEXT): volume.c
mpd-utf8.$(OBJEXT): utf8.c
mpd-zeroconf.$(OBJEXT): zeroconf.c
mpd-locate.$(OBJEXT): locate.c
mpd-storedPlaylist.$(OBJEXT): storedPlaylist.c
mpd$(EXEEXT): $(mpd_OBJECTS) $(mpd_DEPENDENCIES) 
	@rm -f mpd$(EXEEXT)
	$(LINK) $(mpd_LDFLAGS) $(mpd_OBJECTS) $(mpd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-_flac_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-_ogg_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-aac_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_alsa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_ao.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_jack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_mvp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_oss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_osx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_pulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_shout.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audiofile_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-buffer2array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-charConv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-command.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-compress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-conf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-dbUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-decode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-directory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-flac_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-inputPlugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-inputStream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-inputStream_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-inputStream_http.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-interface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-listen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-locate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-ls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-metadataChunk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-mod_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-mp3_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-mp4_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-mpc_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-myfprintf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-normalize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-oggflac_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-oggvorbis_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-outputBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-pcm_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-permission.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-player.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-playerData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-playlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-replayGain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-sig_handlers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-signal_check.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-sllist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-song.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-state_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-stats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-storedPlaylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-tag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-tagTracker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-tree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-utf8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-volume.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-zeroconf.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mpd-audioOutput_alsa.o: audioOutputs/audioOutput_alsa.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_alsa.c' object='mpd-audioOutput_alsa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_alsa.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_alsa.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_alsa.o `test -f 'audioOutputs/audioOutput_alsa.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_alsa.c

mpd-audioOutput_alsa.obj: audioOutputs/audioOutput_alsa.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_alsa.c' object='mpd-audioOutput_alsa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_alsa.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_alsa.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_alsa.obj `cygpath -w audioOutputs/audioOutput_alsa.c`

mpd-audioOutput_alsa.lo: audioOutputs/audioOutput_alsa.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_alsa.c' object='mpd-audioOutput_alsa.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_alsa.Plo' tmpdepfile='$(DEPDIR)/mpd-audioOutput_alsa.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_alsa.lo `test -f 'audioOutputs/audioOutput_alsa.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_alsa.c

mpd-audioOutput_ao.o: audioOutputs/audioOutput_ao.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_ao.c' object='mpd-audioOutput_ao.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_ao.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_ao.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_ao.o `test -f 'audioOutputs/audioOutput_ao.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_ao.c

mpd-audioOutput_ao.obj: audioOutputs/audioOutput_ao.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_ao.c' object='mpd-audioOutput_ao.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_ao.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_ao.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_ao.obj `cygpath -w audioOutputs/audioOutput_ao.c`

mpd-audioOutput_ao.lo: audioOutputs/audioOutput_ao.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_ao.c' object='mpd-audioOutput_ao.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_ao.Plo' tmpdepfile='$(DEPDIR)/mpd-audioOutput_ao.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_ao.lo `test -f 'audioOutputs/audioOutput_ao.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_ao.c

mpd-audioOutput_oss.o: audioOutputs/audioOutput_oss.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_oss.c' object='mpd-audioOutput_oss.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_oss.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_oss.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_oss.o `test -f 'audioOutputs/audioOutput_oss.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_oss.c

mpd-audioOutput_oss.obj: audioOutputs/audioOutput_oss.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_oss.c' object='mpd-audioOutput_oss.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_oss.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_oss.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_oss.obj `cygpath -w audioOutputs/audioOutput_oss.c`

mpd-audioOutput_oss.lo: audioOutputs/audioOutput_oss.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_oss.c' object='mpd-audioOutput_oss.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_oss.Plo' tmpdepfile='$(DEPDIR)/mpd-audioOutput_oss.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_oss.lo `test -f 'audioOutputs/audioOutput_oss.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_oss.c

mpd-audioOutput_osx.o: audioOutputs/audioOutput_osx.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_osx.c' object='mpd-audioOutput_osx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_osx.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_osx.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_osx.o `test -f 'audioOutputs/audioOutput_osx.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_osx.c

mpd-audioOutput_osx.obj: audioOutputs/audioOutput_osx.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_osx.c' object='mpd-audioOutput_osx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_osx.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_osx.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_osx.obj `cygpath -w audioOutputs/audioOutput_osx.c`

mpd-audioOutput_osx.lo: audioOutputs/audioOutput_osx.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_osx.c' object='mpd-audioOutput_osx.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_osx.Plo' tmpdepfile='$(DEPDIR)/mpd-audioOutput_osx.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_osx.lo `test -f 'audioOutputs/audioOutput_osx.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_osx.c

mpd-audioOutput_pulse.o: audioOutputs/audioOutput_pulse.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_pulse.c' object='mpd-audioOutput_pulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_pulse.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_pulse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_pulse.o `test -f 'audioOutputs/audioOutput_pulse.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_pulse.c

mpd-audioOutput_pulse.obj: audioOutputs/audioOutput_pulse.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_pulse.c' object='mpd-audioOutput_pulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_pulse.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_pulse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_pulse.obj `cygpath -w audioOutputs/audioOutput_pulse.c`

mpd-audioOutput_pulse.lo: audioOutputs/audioOutput_pulse.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_pulse.c' object='mpd-audioOutput_pulse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_pulse.Plo' tmpdepfile='$(DEPDIR)/mpd-audioOutput_pulse.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_pulse.lo `test -f 'audioOutputs/audioOutput_pulse.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_pulse.c

mpd-audioOutput_mvp.o: audioOutputs/audioOutput_mvp.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_mvp.c' object='mpd-audioOutput_mvp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_mvp.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_mvp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_mvp.o `test -f 'audioOutputs/audioOutput_mvp.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_mvp.c

mpd-audioOutput_mvp.obj: audioOutputs/audioOutput_mvp.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_mvp.c' object='mpd-audioOutput_mvp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_mvp.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_mvp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_mvp.obj `cygpath -w audioOutputs/audioOutput_mvp.c`

mpd-audioOutput_mvp.lo: audioOutputs/audioOutput_mvp.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_mvp.c' object='mpd-audioOutput_mvp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_mvp.Plo' tmpdepfile='$(DEPDIR)/mpd-audioOutput_mvp.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_mvp.lo `test -f 'audioOutputs/audioOutput_mvp.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_mvp.c

mpd-audioOutput_shout.o: audioOutputs/audioOutput_shout.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_shout.c' object='mpd-audioOutput_shout.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_shout.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_shout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_shout.o `test -f 'audioOutputs/audioOutput_shout.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_shout.c

mpd-audioOutput_shout.obj: audioOutputs/audioOutput_shout.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_shout.c' object='mpd-audioOutput_shout.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_shout.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_shout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_shout.obj `cygpath -w audioOutputs/audioOutput_shout.c`

mpd-audioOutput_shout.lo: audioOutputs/audioOutput_shout.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_shout.c' object='mpd-audioOutput_shout.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_shout.Plo' tmpdepfile='$(DEPDIR)/mpd-audioOutput_shout.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_shout.lo `test -f 'audioOutputs/audioOutput_shout.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_shout.c

mpd-audioOutput_jack.o: audioOutputs/audioOutput_jack.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_jack.c' object='mpd-audioOutput_jack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_jack.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_jack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_jack.o `test -f 'audioOutputs/audioOutput_jack.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_jack.c

mpd-audioOutput_jack.obj: audioOutputs/audioOutput_jack.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_jack.c' object='mpd-audioOutput_jack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_jack.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput_jack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_jack.obj `cygpath -w audioOutputs/audioOutput_jack.c`

mpd-audioOutput_jack.lo: audioOutputs/audioOutput_jack.c
@AMDEP_TRUE@	source='audioOutputs/audioOutput_jack.c' object='mpd-audioOutput_jack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput_jack.Plo' tmpdepfile='$(DEPDIR)/mpd-audioOutput_jack.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_jack.lo `test -f 'audioOutputs/audioOutput_jack.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_jack.c

mpd-_flac_common.o: inputPlugins/_flac_common.c
@AMDEP_TRUE@	source='inputPlugins/_flac_common.c' object='mpd-_flac_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-_flac_common.Po' tmpdepfile='$(DEPDIR)/mpd-_flac_common.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_flac_common.o `test -f 'inputPlugins/_flac_common.c' || echo '$(srcdir)/'`inputPlugins/_flac_common.c

mpd-_flac_common.obj: inputPlugins/_flac_common.c
@AMDEP_TRUE@	source='inputPlugins/_flac_common.c' object='mpd-_flac_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-_flac_common.Po' tmpdepfile='$(DEPDIR)/mpd-_flac_common.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_flac_common.obj `cygpath -w inputPlugins/_flac_common.c`

mpd-_flac_common.lo: inputPlugins/_flac_common.c
@AMDEP_TRUE@	source='inputPlugins/_flac_common.c' object='mpd-_flac_common.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-_flac_common.Plo' tmpdepfile='$(DEPDIR)/mpd-_flac_common.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_flac_common.lo `test -f 'inputPlugins/_flac_common.c' || echo '$(srcdir)/'`inputPlugins/_flac_common.c

mpd-_ogg_common.o: inputPlugins/_ogg_common.c
@AMDEP_TRUE@	source='inputPlugins/_ogg_common.c' object='mpd-_ogg_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-_ogg_common.Po' tmpdepfile='$(DEPDIR)/mpd-_ogg_common.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_ogg_common.o `test -f 'inputPlugins/_ogg_common.c' || echo '$(srcdir)/'`inputPlugins/_ogg_common.c

mpd-_ogg_common.obj: inputPlugins/_ogg_common.c
@AMDEP_TRUE@	source='inputPlugins/_ogg_common.c' object='mpd-_ogg_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-_ogg_common.Po' tmpdepfile='$(DEPDIR)/mpd-_ogg_common.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_ogg_common.obj `cygpath -w inputPlugins/_ogg_common.c`

mpd-_ogg_common.lo: inputPlugins/_ogg_common.c
@AMDEP_TRUE@	source='inputPlugins/_ogg_common.c' object='mpd-_ogg_common.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-_ogg_common.Plo' tmpdepfile='$(DEPDIR)/mpd-_ogg_common.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_ogg_common.lo `test -f 'inputPlugins/_ogg_common.c' || echo '$(srcdir)/'`inputPlugins/_ogg_common.c

mpd-oggflac_plugin.o: inputPlugins/oggflac_plugin.c
@AMDEP_TRUE@	source='inputPlugins/oggflac_plugin.c' object='mpd-oggflac_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-oggflac_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-oggflac_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggflac_plugin.o `test -f 'inputPlugins/oggflac_plugin.c' || echo '$(srcdir)/'`inputPlugins/oggflac_plugin.c

mpd-oggflac_plugin.obj: inputPlugins/oggflac_plugin.c
@AMDEP_TRUE@	source='inputPlugins/oggflac_plugin.c' object='mpd-oggflac_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-oggflac_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-oggflac_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggflac_plugin.obj `cygpath -w inputPlugins/oggflac_plugin.c`

mpd-oggflac_plugin.lo: inputPlugins/oggflac_plugin.c
@AMDEP_TRUE@	source='inputPlugins/oggflac_plugin.c' object='mpd-oggflac_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-oggflac_plugin.Plo' tmpdepfile='$(DEPDIR)/mpd-oggflac_plugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggflac_plugin.lo `test -f 'inputPlugins/oggflac_plugin.c' || echo '$(srcdir)/'`inputPlugins/oggflac_plugin.c

mpd-oggvorbis_plugin.o: inputPlugins/oggvorbis_plugin.c
@AMDEP_TRUE@	source='inputPlugins/oggvorbis_plugin.c' object='mpd-oggvorbis_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-oggvorbis_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-oggvorbis_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggvorbis_plugin.o `test -f 'inputPlugins/oggvorbis_plugin.c' || echo '$(srcdir)/'`inputPlugins/oggvorbis_plugin.c

mpd-oggvorbis_plugin.obj: inputPlugins/oggvorbis_plugin.c
@AMDEP_TRUE@	source='inputPlugins/oggvorbis_plugin.c' object='mpd-oggvorbis_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-oggvorbis_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-oggvorbis_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggvorbis_plugin.obj `cygpath -w inputPlugins/oggvorbis_plugin.c`

mpd-oggvorbis_plugin.lo: inputPlugins/oggvorbis_plugin.c
@AMDEP_TRUE@	source='inputPlugins/oggvorbis_plugin.c' object='mpd-oggvorbis_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-oggvorbis_plugin.Plo' tmpdepfile='$(DEPDIR)/mpd-oggvorbis_plugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggvorbis_plugin.lo `test -f 'inputPlugins/oggvorbis_plugin.c' || echo '$(srcdir)/'`inputPlugins/oggvorbis_plugin.c

mpd-aac_plugin.o: inputPlugins/aac_plugin.c
@AMDEP_TRUE@	source='inputPlugins/aac_plugin.c' object='mpd-aac_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-aac_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-aac_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-aac_plugin.o `test -f 'inputPlugins/aac_plugin.c' || echo '$(srcdir)/'`inputPlugins/aac_plugin.c

mpd-aac_plugin.obj: inputPlugins/aac_plugin.c
@AMDEP_TRUE@	source='inputPlugins/aac_plugin.c' object='mpd-aac_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-aac_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-aac_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-aac_plugin.obj `cygpath -w inputPlugins/aac_plugin.c`

mpd-aac_plugin.lo: inputPlugins/aac_plugin.c
@AMDEP_TRUE@	source='inputPlugins/aac_plugin.c' object='mpd-aac_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-aac_plugin.Plo' tmpdepfile='$(DEPDIR)/mpd-aac_plugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-aac_plugin.lo `test -f 'inputPlugins/aac_plugin.c' || echo '$(srcdir)/'`inputPlugins/aac_plugin.c

mpd-audiofile_plugin.o: inputPlugins/audiofile_plugin.c
@AMDEP_TRUE@	source='inputPlugins/audiofile_plugin.c' object='mpd-audiofile_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audiofile_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-audiofile_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audiofile_plugin.o `test -f 'inputPlugins/audiofile_plugin.c' || echo '$(srcdir)/'`inputPlugins/audiofile_plugin.c

mpd-audiofile_plugin.obj: inputPlugins/audiofile_plugin.c
@AMDEP_TRUE@	source='inputPlugins/audiofile_plugin.c' object='mpd-audiofile_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audiofile_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-audiofile_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audiofile_plugin.obj `cygpath -w inputPlugins/audiofile_plugin.c`

mpd-audiofile_plugin.lo: inputPlugins/audiofile_plugin.c
@AMDEP_TRUE@	source='inputPlugins/audiofile_plugin.c' object='mpd-audiofile_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audiofile_plugin.Plo' tmpdepfile='$(DEPDIR)/mpd-audiofile_plugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audiofile_plugin.lo `test -f 'inputPlugins/audiofile_plugin.c' || echo '$(srcdir)/'`inputPlugins/audiofile_plugin.c

mpd-flac_plugin.o: inputPlugins/flac_plugin.c
@AMDEP_TRUE@	source='inputPlugins/flac_plugin.c' object='mpd-flac_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-flac_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-flac_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-flac_plugin.o `test -f 'inputPlugins/flac_plugin.c' || echo '$(srcdir)/'`inputPlugins/flac_plugin.c

mpd-flac_plugin.obj: inputPlugins/flac_plugin.c
@AMDEP_TRUE@	source='inputPlugins/flac_plugin.c' object='mpd-flac_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-flac_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-flac_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-flac_plugin.obj `cygpath -w inputPlugins/flac_plugin.c`

mpd-flac_plugin.lo: inputPlugins/flac_plugin.c
@AMDEP_TRUE@	source='inputPlugins/flac_plugin.c' object='mpd-flac_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-flac_plugin.Plo' tmpdepfile='$(DEPDIR)/mpd-flac_plugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-flac_plugin.lo `test -f 'inputPlugins/flac_plugin.c' || echo '$(srcdir)/'`inputPlugins/flac_plugin.c

mpd-mod_plugin.o: inputPlugins/mod_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mod_plugin.c' object='mpd-mod_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mod_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-mod_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mod_plugin.o `test -f 'inputPlugins/mod_plugin.c' || echo '$(srcdir)/'`inputPlugins/mod_plugin.c

mpd-mod_plugin.obj: inputPlugins/mod_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mod_plugin.c' object='mpd-mod_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mod_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-mod_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mod_plugin.obj `cygpath -w inputPlugins/mod_plugin.c`

mpd-mod_plugin.lo: inputPlugins/mod_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mod_plugin.c' object='mpd-mod_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mod_plugin.Plo' tmpdepfile='$(DEPDIR)/mpd-mod_plugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mod_plugin.lo `test -f 'inputPlugins/mod_plugin.c' || echo '$(srcdir)/'`inputPlugins/mod_plugin.c

mpd-mp3_plugin.o: inputPlugins/mp3_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mp3_plugin.c' object='mpd-mp3_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mp3_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-mp3_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp3_plugin.o `test -f 'inputPlugins/mp3_plugin.c' || echo '$(srcdir)/'`inputPlugins/mp3_plugin.c

mpd-mp3_plugin.obj: inputPlugins/mp3_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mp3_plugin.c' object='mpd-mp3_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mp3_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-mp3_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp3_plugin.obj `cygpath -w inputPlugins/mp3_plugin.c`

mpd-mp3_plugin.lo: inputPlugins/mp3_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mp3_plugin.c' object='mpd-mp3_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mp3_plugin.Plo' tmpdepfile='$(DEPDIR)/mpd-mp3_plugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp3_plugin.lo `test -f 'inputPlugins/mp3_plugin.c' || echo '$(srcdir)/'`inputPlugins/mp3_plugin.c

mpd-mp4_plugin.o: inputPlugins/mp4_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mp4_plugin.c' object='mpd-mp4_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mp4_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-mp4_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp4_plugin.o `test -f 'inputPlugins/mp4_plugin.c' || echo '$(srcdir)/'`inputPlugins/mp4_plugin.c

mpd-mp4_plugin.obj: inputPlugins/mp4_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mp4_plugin.c' object='mpd-mp4_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mp4_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-mp4_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp4_plugin.obj `cygpath -w inputPlugins/mp4_plugin.c`

mpd-mp4_plugin.lo: inputPlugins/mp4_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mp4_plugin.c' object='mpd-mp4_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mp4_plugin.Plo' tmpdepfile='$(DEPDIR)/mpd-mp4_plugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp4_plugin.lo `test -f 'inputPlugins/mp4_plugin.c' || echo '$(srcdir)/'`inputPlugins/mp4_plugin.c

mpd-mpc_plugin.o: inputPlugins/mpc_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mpc_plugin.c' object='mpd-mpc_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mpc_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-mpc_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mpc_plugin.o `test -f 'inputPlugins/mpc_plugin.c' || echo '$(srcdir)/'`inputPlugins/mpc_plugin.c

mpd-mpc_plugin.obj: inputPlugins/mpc_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mpc_plugin.c' object='mpd-mpc_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mpc_plugin.Po' tmpdepfile='$(DEPDIR)/mpd-mpc_plugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mpc_plugin.obj `cygpath -w inputPlugins/mpc_plugin.c`

mpd-mpc_plugin.lo: inputPlugins/mpc_plugin.c
@AMDEP_TRUE@	source='inputPlugins/mpc_plugin.c' object='mpd-mpc_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-mpc_plugin.Plo' tmpdepfile='$(DEPDIR)/mpd-mpc_plugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mpc_plugin.lo `test -f 'inputPlugins/mpc_plugin.c' || echo '$(srcdir)/'`inputPlugins/mpc_plugin.c

mpd-audio.o: audio.c
@AMDEP_TRUE@	source='audio.c' object='mpd-audio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audio.Po' tmpdepfile='$(DEPDIR)/mpd-audio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audio.o `test -f 'audio.c' || echo '$(srcdir)/'`audio.c

mpd-audio.obj: audio.c
@AMDEP_TRUE@	source='audio.c' object='mpd-audio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audio.Po' tmpdepfile='$(DEPDIR)/mpd-audio.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audio.obj `cygpath -w audio.c`

mpd-audio.lo: audio.c
@AMDEP_TRUE@	source='audio.c' object='mpd-audio.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audio.Plo' tmpdepfile='$(DEPDIR)/mpd-audio.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audio.lo `test -f 'audio.c' || echo '$(srcdir)/'`audio.c

mpd-audioOutput.o: audioOutput.c
@AMDEP_TRUE@	source='audioOutput.c' object='mpd-audioOutput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput.o `test -f 'audioOutput.c' || echo '$(srcdir)/'`audioOutput.c

mpd-audioOutput.obj: audioOutput.c
@AMDEP_TRUE@	source='audioOutput.c' object='mpd-audioOutput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput.Po' tmpdepfile='$(DEPDIR)/mpd-audioOutput.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput.obj `cygpath -w audioOutput.c`

mpd-audioOutput.lo: audioOutput.c
@AMDEP_TRUE@	source='audioOutput.c' object='mpd-audioOutput.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-audioOutput.Plo' tmpdepfile='$(DEPDIR)/mpd-audioOutput.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput.lo `test -f 'audioOutput.c' || echo '$(srcdir)/'`audioOutput.c

mpd-buffer2array.o: buffer2array.c
@AMDEP_TRUE@	source='buffer2array.c' object='mpd-buffer2array.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-buffer2array.Po' tmpdepfile='$(DEPDIR)/mpd-buffer2array.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-buffer2array.o `test -f 'buffer2array.c' || echo '$(srcdir)/'`buffer2array.c

mpd-buffer2array.obj: buffer2array.c
@AMDEP_TRUE@	source='buffer2array.c' object='mpd-buffer2array.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-buffer2array.Po' tmpdepfile='$(DEPDIR)/mpd-buffer2array.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-buffer2array.obj `cygpath -w buffer2array.c`

mpd-buffer2array.lo: buffer2array.c
@AMDEP_TRUE@	source='buffer2array.c' object='mpd-buffer2array.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-buffer2array.Plo' tmpdepfile='$(DEPDIR)/mpd-buffer2array.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-buffer2array.lo `test -f 'buffer2array.c' || echo '$(srcdir)/'`buffer2array.c

mpd-charConv.o: charConv.c
@AMDEP_TRUE@	source='charConv.c' object='mpd-charConv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-charConv.Po' tmpdepfile='$(DEPDIR)/mpd-charConv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-charConv.o `test -f 'charConv.c' || echo '$(srcdir)/'`charConv.c

mpd-charConv.obj: charConv.c
@AMDEP_TRUE@	source='charConv.c' object='mpd-charConv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-charConv.Po' tmpdepfile='$(DEPDIR)/mpd-charConv.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-charConv.obj `cygpath -w charConv.c`

mpd-charConv.lo: charConv.c
@AMDEP_TRUE@	source='charConv.c' object='mpd-charConv.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-charConv.Plo' tmpdepfile='$(DEPDIR)/mpd-charConv.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-charConv.lo `test -f 'charConv.c' || echo '$(srcdir)/'`charConv.c

mpd-command.o: command.c
@AMDEP_TRUE@	source='command.c' object='mpd-command.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-command.Po' tmpdepfile='$(DEPDIR)/mpd-command.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-command.o `test -f 'command.c' || echo '$(srcdir)/'`command.c

mpd-command.obj: command.c
@AMDEP_TRUE@	source='command.c' object='mpd-command.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-command.Po' tmpdepfile='$(DEPDIR)/mpd-command.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-command.obj `cygpath -w command.c`

mpd-command.lo: command.c
@AMDEP_TRUE@	source='command.c' object='mpd-command.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-command.Plo' tmpdepfile='$(DEPDIR)/mpd-command.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-command.lo `test -f 'command.c' || echo '$(srcdir)/'`command.c

mpd-conf.o: conf.c
@AMDEP_TRUE@	source='conf.c' object='mpd-conf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-conf.Po' tmpdepfile='$(DEPDIR)/mpd-conf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-conf.o `test -f 'conf.c' || echo '$(srcdir)/'`conf.c

mpd-conf.obj: conf.c
@AMDEP_TRUE@	source='conf.c' object='mpd-conf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-conf.Po' tmpdepfile='$(DEPDIR)/mpd-conf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-conf.obj `cygpath -w conf.c`

mpd-conf.lo: conf.c
@AMDEP_TRUE@	source='conf.c' object='mpd-conf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-conf.Plo' tmpdepfile='$(DEPDIR)/mpd-conf.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-conf.lo `test -f 'conf.c' || echo '$(srcdir)/'`conf.c

mpd-dbUtils.o: dbUtils.c
@AMDEP_TRUE@	source='dbUtils.c' object='mpd-dbUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-dbUtils.Po' tmpdepfile='$(DEPDIR)/mpd-dbUtils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-dbUtils.o `test -f 'dbUtils.c' || echo '$(srcdir)/'`dbUtils.c

mpd-dbUtils.obj: dbUtils.c
@AMDEP_TRUE@	source='dbUtils.c' object='mpd-dbUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-dbUtils.Po' tmpdepfile='$(DEPDIR)/mpd-dbUtils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-dbUtils.obj `cygpath -w dbUtils.c`

mpd-dbUtils.lo: dbUtils.c
@AMDEP_TRUE@	source='dbUtils.c' object='mpd-dbUtils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-dbUtils.Plo' tmpdepfile='$(DEPDIR)/mpd-dbUtils.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-dbUtils.lo `test -f 'dbUtils.c' || echo '$(srcdir)/'`dbUtils.c

mpd-decode.o: decode.c
@AMDEP_TRUE@	source='decode.c' object='mpd-decode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-decode.Po' tmpdepfile='$(DEPDIR)/mpd-decode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-decode.o `test -f 'decode.c' || echo '$(srcdir)/'`decode.c

mpd-decode.obj: decode.c
@AMDEP_TRUE@	source='decode.c' object='mpd-decode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-decode.Po' tmpdepfile='$(DEPDIR)/mpd-decode.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-decode.obj `cygpath -w decode.c`

mpd-decode.lo: decode.c
@AMDEP_TRUE@	source='decode.c' object='mpd-decode.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-decode.Plo' tmpdepfile='$(DEPDIR)/mpd-decode.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-decode.lo `test -f 'decode.c' || echo '$(srcdir)/'`decode.c

mpd-directory.o: directory.c
@AMDEP_TRUE@	source='directory.c' object='mpd-directory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-directory.Po' tmpdepfile='$(DEPDIR)/mpd-directory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-directory.o `test -f 'directory.c' || echo '$(srcdir)/'`directory.c

mpd-directory.obj: directory.c
@AMDEP_TRUE@	source='directory.c' object='mpd-directory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-directory.Po' tmpdepfile='$(DEPDIR)/mpd-directory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-directory.obj `cygpath -w directory.c`

mpd-directory.lo: directory.c
@AMDEP_TRUE@	source='directory.c' object='mpd-directory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-directory.Plo' tmpdepfile='$(DEPDIR)/mpd-directory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-directory.lo `test -f 'directory.c' || echo '$(srcdir)/'`directory.c

mpd-inputPlugin.o: inputPlugin.c
@AMDEP_TRUE@	source='inputPlugin.c' object='mpd-inputPlugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputPlugin.Po' tmpdepfile='$(DEPDIR)/mpd-inputPlugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputPlugin.o `test -f 'inputPlugin.c' || echo '$(srcdir)/'`inputPlugin.c

mpd-inputPlugin.obj: inputPlugin.c
@AMDEP_TRUE@	source='inputPlugin.c' object='mpd-inputPlugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputPlugin.Po' tmpdepfile='$(DEPDIR)/mpd-inputPlugin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputPlugin.obj `cygpath -w inputPlugin.c`

mpd-inputPlugin.lo: inputPlugin.c
@AMDEP_TRUE@	source='inputPlugin.c' object='mpd-inputPlugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputPlugin.Plo' tmpdepfile='$(DEPDIR)/mpd-inputPlugin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputPlugin.lo `test -f 'inputPlugin.c' || echo '$(srcdir)/'`inputPlugin.c

mpd-inputStream.o: inputStream.c
@AMDEP_TRUE@	source='inputStream.c' object='mpd-inputStream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputStream.Po' tmpdepfile='$(DEPDIR)/mpd-inputStream.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream.o `test -f 'inputStream.c' || echo '$(srcdir)/'`inputStream.c

mpd-inputStream.obj: inputStream.c
@AMDEP_TRUE@	source='inputStream.c' object='mpd-inputStream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputStream.Po' tmpdepfile='$(DEPDIR)/mpd-inputStream.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream.obj `cygpath -w inputStream.c`

mpd-inputStream.lo: inputStream.c
@AMDEP_TRUE@	source='inputStream.c' object='mpd-inputStream.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputStream.Plo' tmpdepfile='$(DEPDIR)/mpd-inputStream.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream.lo `test -f 'inputStream.c' || echo '$(srcdir)/'`inputStream.c

mpd-inputStream_file.o: inputStream_file.c
@AMDEP_TRUE@	source='inputStream_file.c' object='mpd-inputStream_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputStream_file.Po' tmpdepfile='$(DEPDIR)/mpd-inputStream_file.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_file.o `test -f 'inputStream_file.c' || echo '$(srcdir)/'`inputStream_file.c

mpd-inputStream_file.obj: inputStream_file.c
@AMDEP_TRUE@	source='inputStream_file.c' object='mpd-inputStream_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputStream_file.Po' tmpdepfile='$(DEPDIR)/mpd-inputStream_file.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_file.obj `cygpath -w inputStream_file.c`

mpd-inputStream_file.lo: inputStream_file.c
@AMDEP_TRUE@	source='inputStream_file.c' object='mpd-inputStream_file.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputStream_file.Plo' tmpdepfile='$(DEPDIR)/mpd-inputStream_file.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_file.lo `test -f 'inputStream_file.c' || echo '$(srcdir)/'`inputStream_file.c

mpd-inputStream_http.o: inputStream_http.c
@AMDEP_TRUE@	source='inputStream_http.c' object='mpd-inputStream_http.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputStream_http.Po' tmpdepfile='$(DEPDIR)/mpd-inputStream_http.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_http.o `test -f 'inputStream_http.c' || echo '$(srcdir)/'`inputStream_http.c

mpd-inputStream_http.obj: inputStream_http.c
@AMDEP_TRUE@	source='inputStream_http.c' object='mpd-inputStream_http.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputStream_http.Po' tmpdepfile='$(DEPDIR)/mpd-inputStream_http.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_http.obj `cygpath -w inputStream_http.c`

mpd-inputStream_http.lo: inputStream_http.c
@AMDEP_TRUE@	source='inputStream_http.c' object='mpd-inputStream_http.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-inputStream_http.Plo' tmpdepfile='$(DEPDIR)/mpd-inputStream_http.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_http.lo `test -f 'inputStream_http.c' || echo '$(srcdir)/'`inputStream_http.c

mpd-interface.o: interface.c
@AMDEP_TRUE@	source='interface.c' object='mpd-interface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-interface.Po' tmpdepfile='$(DEPDIR)/mpd-interface.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-interface.o `test -f 'interface.c' || echo '$(srcdir)/'`interface.c

mpd-interface.obj: interface.c
@AMDEP_TRUE@	source='interface.c' object='mpd-interface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-interface.Po' tmpdepfile='$(DEPDIR)/mpd-interface.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-interface.obj `cygpath -w interface.c`

mpd-interface.lo: interface.c
@AMDEP_TRUE@	source='interface.c' object='mpd-interface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-interface.Plo' tmpdepfile='$(DEPDIR)/mpd-interface.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-interface.lo `test -f 'interface.c' || echo '$(srcdir)/'`interface.c

mpd-list.o: list.c
@AMDEP_TRUE@	source='list.c' object='mpd-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-list.Po' tmpdepfile='$(DEPDIR)/mpd-list.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c

mpd-list.obj: list.c
@AMDEP_TRUE@	source='list.c' object='mpd-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-list.Po' tmpdepfile='$(DEPDIR)/mpd-list.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-list.obj `cygpath -w list.c`

mpd-list.lo: list.c
@AMDEP_TRUE@	source='list.c' object='mpd-list.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-list.Plo' tmpdepfile='$(DEPDIR)/mpd-list.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-list.lo `test -f 'list.c' || echo '$(srcdir)/'`list.c

mpd-listen.o: listen.c
@AMDEP_TRUE@	source='listen.c' object='mpd-listen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-listen.Po' tmpdepfile='$(DEPDIR)/mpd-listen.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-listen.o `test -f 'listen.c' || echo '$(srcdir)/'`listen.c

mpd-listen.obj: listen.c
@AMDEP_TRUE@	source='listen.c' object='mpd-listen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-listen.Po' tmpdepfile='$(DEPDIR)/mpd-listen.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-listen.obj `cygpath -w listen.c`

mpd-listen.lo: listen.c
@AMDEP_TRUE@	source='listen.c' object='mpd-listen.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-listen.Plo' tmpdepfile='$(DEPDIR)/mpd-listen.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-listen.lo `test -f 'listen.c' || echo '$(srcdir)/'`listen.c

mpd-log.o: log.c
@AMDEP_TRUE@	source='log.c' object='mpd-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-log.Po' tmpdepfile='$(DEPDIR)/mpd-log.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c

mpd-log.obj: log.c
@AMDEP_TRUE@	source='log.c' object='mpd-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-log.Po' tmpdepfile='$(DEPDIR)/mpd-log.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-log.obj `cygpath -w log.c`

mpd-log.lo: log.c
@AMDEP_TRUE@	source='log.c' object='mpd-log.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-log.Plo' tmpdepfile='$(DEPDIR)/mpd-log.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-log.lo `test -f 'log.c' || echo '$(srcdir)/'`log.c

mpd-ls.o: ls.c
@AMDEP_TRUE@	source='ls.c' object='mpd-ls.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-ls.Po' tmpdepfile='$(DEPDIR)/mpd-ls.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-ls.o `test -f 'ls.c' || echo '$(srcdir)/'`ls.c

mpd-ls.obj: ls.c
@AMDEP_TRUE@	source='ls.c' object='mpd-ls.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-ls.Po' tmpdepfile='$(DEPDIR)/mpd-ls.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-ls.obj `cygpath -w ls.c`

mpd-ls.lo: ls.c
@AMDEP_TRUE@	source='ls.c' object='mpd-ls.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-ls.Plo' tmpdepfile='$(DEPDIR)/mpd-ls.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-ls.lo `test -f 'ls.c' || echo '$(srcdir)/'`ls.c

mpd-main.o: main.c
@AMDEP_TRUE@	source='main.c' object='mpd-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-main.Po' tmpdepfile='$(DEPDIR)/mpd-main.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

mpd-main.obj: main.c
@AMDEP_TRUE@	source='main.c' object='mpd-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-main.Po' tmpdepfile='$(DEPDIR)/mpd-main.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-main.obj `cygpath -w main.c`

mpd-main.lo: main.c
@AMDEP_TRUE@	source='main.c' object='mpd-main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-main.Plo' tmpdepfile='$(DEPDIR)/mpd-main.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-main.lo `test -f 'main.c' || echo '$(srcdir)/'`main.c

mpd-metadataChunk.o: metadataChunk.c
@AMDEP_TRUE@	source='metadataChunk.c' object='mpd-metadataChunk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-metadataChunk.Po' tmpdepfile='$(DEPDIR)/mpd-metadataChunk.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-metadataChunk.o `test -f 'metadataChunk.c' || echo '$(srcdir)/'`metadataChunk.c

mpd-metadataChunk.obj: metadataChunk.c
@AMDEP_TRUE@	source='metadataChunk.c' object='mpd-metadataChunk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-metadataChunk.Po' tmpdepfile='$(DEPDIR)/mpd-metadataChunk.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-metadataChunk.obj `cygpath -w metadataChunk.c`

mpd-metadataChunk.lo: metadataChunk.c
@AMDEP_TRUE@	source='metadataChunk.c' object='mpd-metadataChunk.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-metadataChunk.Plo' tmpdepfile='$(DEPDIR)/mpd-metadataChunk.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-metadataChunk.lo `test -f 'metadataChunk.c' || echo '$(srcdir)/'`metadataChunk.c

mpd-myfprintf.o: myfprintf.c
@AMDEP_TRUE@	source='myfprintf.c' object='mpd-myfprintf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-myfprintf.Po' tmpdepfile='$(DEPDIR)/mpd-myfprintf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-myfprintf.o `test -f 'myfprintf.c' || echo '$(srcdir)/'`myfprintf.c

mpd-myfprintf.obj: myfprintf.c
@AMDEP_TRUE@	source='myfprintf.c' object='mpd-myfprintf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-myfprintf.Po' tmpdepfile='$(DEPDIR)/mpd-myfprintf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-myfprintf.obj `cygpath -w myfprintf.c`

mpd-myfprintf.lo: myfprintf.c
@AMDEP_TRUE@	source='myfprintf.c' object='mpd-myfprintf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-myfprintf.Plo' tmpdepfile='$(DEPDIR)/mpd-myfprintf.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-myfprintf.lo `test -f 'myfprintf.c' || echo '$(srcdir)/'`myfprintf.c

mpd-normalize.o: normalize.c
@AMDEP_TRUE@	source='normalize.c' object='mpd-normalize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-normalize.Po' tmpdepfile='$(DEPDIR)/mpd-normalize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-normalize.o `test -f 'normalize.c' || echo '$(srcdir)/'`normalize.c

mpd-normalize.obj: normalize.c
@AMDEP_TRUE@	source='normalize.c' object='mpd-normalize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-normalize.Po' tmpdepfile='$(DEPDIR)/mpd-normalize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-normalize.obj `cygpath -w normalize.c`

mpd-normalize.lo: normalize.c
@AMDEP_TRUE@	source='normalize.c' object='mpd-normalize.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-normalize.Plo' tmpdepfile='$(DEPDIR)/mpd-normalize.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-normalize.lo `test -f 'normalize.c' || echo '$(srcdir)/'`normalize.c

mpd-compress.o: compress.c
@AMDEP_TRUE@	source='compress.c' object='mpd-compress.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-compress.Po' tmpdepfile='$(DEPDIR)/mpd-compress.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-compress.o `test -f 'compress.c' || echo '$(srcdir)/'`compress.c

mpd-compress.obj: compress.c
@AMDEP_TRUE@	source='compress.c' object='mpd-compress.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-compress.Po' tmpdepfile='$(DEPDIR)/mpd-compress.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-compress.obj `cygpath -w compress.c`

mpd-compress.lo: compress.c
@AMDEP_TRUE@	source='compress.c' object='mpd-compress.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-compress.Plo' tmpdepfile='$(DEPDIR)/mpd-compress.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-compress.lo `test -f 'compress.c' || echo '$(srcdir)/'`compress.c

mpd-outputBuffer.o: outputBuffer.c
@AMDEP_TRUE@	source='outputBuffer.c' object='mpd-outputBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-outputBuffer.Po' tmpdepfile='$(DEPDIR)/mpd-outputBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-outputBuffer.o `test -f 'outputBuffer.c' || echo '$(srcdir)/'`outputBuffer.c

mpd-outputBuffer.obj: outputBuffer.c
@AMDEP_TRUE@	source='outputBuffer.c' object='mpd-outputBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-outputBuffer.Po' tmpdepfile='$(DEPDIR)/mpd-outputBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-outputBuffer.obj `cygpath -w outputBuffer.c`

mpd-outputBuffer.lo: outputBuffer.c
@AMDEP_TRUE@	source='outputBuffer.c' object='mpd-outputBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-outputBuffer.Plo' tmpdepfile='$(DEPDIR)/mpd-outputBuffer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-outputBuffer.lo `test -f 'outputBuffer.c' || echo '$(srcdir)/'`outputBuffer.c

mpd-path.o: path.c
@AMDEP_TRUE@	source='path.c' object='mpd-path.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-path.Po' tmpdepfile='$(DEPDIR)/mpd-path.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-path.o `test -f 'path.c' || echo '$(srcdir)/'`path.c

mpd-path.obj: path.c
@AMDEP_TRUE@	source='path.c' object='mpd-path.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-path.Po' tmpdepfile='$(DEPDIR)/mpd-path.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-path.obj `cygpath -w path.c`

mpd-path.lo: path.c
@AMDEP_TRUE@	source='path.c' object='mpd-path.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-path.Plo' tmpdepfile='$(DEPDIR)/mpd-path.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-path.lo `test -f 'path.c' || echo '$(srcdir)/'`path.c

mpd-pcm_utils.o: pcm_utils.c
@AMDEP_TRUE@	source='pcm_utils.c' object='mpd-pcm_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-pcm_utils.Po' tmpdepfile='$(DEPDIR)/mpd-pcm_utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-pcm_utils.o `test -f 'pcm_utils.c' || echo '$(srcdir)/'`pcm_utils.c

mpd-pcm_utils.obj: pcm_utils.c
@AMDEP_TRUE@	source='pcm_utils.c' object='mpd-pcm_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-pcm_utils.Po' tmpdepfile='$(DEPDIR)/mpd-pcm_utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-pcm_utils.obj `cygpath -w pcm_utils.c`

mpd-pcm_utils.lo: pcm_utils.c
@AMDEP_TRUE@	source='pcm_utils.c' object='mpd-pcm_utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-pcm_utils.Plo' tmpdepfile='$(DEPDIR)/mpd-pcm_utils.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-pcm_utils.lo `test -f 'pcm_utils.c' || echo '$(srcdir)/'`pcm_utils.c

mpd-permission.o: permission.c
@AMDEP_TRUE@	source='permission.c' object='mpd-permission.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-permission.Po' tmpdepfile='$(DEPDIR)/mpd-permission.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-permission.o `test -f 'permission.c' || echo '$(srcdir)/'`permission.c

mpd-permission.obj: permission.c
@AMDEP_TRUE@	source='permission.c' object='mpd-permission.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-permission.Po' tmpdepfile='$(DEPDIR)/mpd-permission.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-permission.obj `cygpath -w permission.c`

mpd-permission.lo: permission.c
@AMDEP_TRUE@	source='permission.c' object='mpd-permission.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-permission.Plo' tmpdepfile='$(DEPDIR)/mpd-permission.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-permission.lo `test -f 'permission.c' || echo '$(srcdir)/'`permission.c

mpd-player.o: player.c
@AMDEP_TRUE@	source='player.c' object='mpd-player.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-player.Po' tmpdepfile='$(DEPDIR)/mpd-player.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-player.o `test -f 'player.c' || echo '$(srcdir)/'`player.c

mpd-player.obj: player.c
@AMDEP_TRUE@	source='player.c' object='mpd-player.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-player.Po' tmpdepfile='$(DEPDIR)/mpd-player.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-player.obj `cygpath -w player.c`

mpd-player.lo: player.c
@AMDEP_TRUE@	source='player.c' object='mpd-player.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-player.Plo' tmpdepfile='$(DEPDIR)/mpd-player.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-player.lo `test -f 'player.c' || echo '$(srcdir)/'`player.c

mpd-playerData.o: playerData.c
@AMDEP_TRUE@	source='playerData.c' object='mpd-playerData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-playerData.Po' tmpdepfile='$(DEPDIR)/mpd-playerData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playerData.o `test -f 'playerData.c' || echo '$(srcdir)/'`playerData.c

mpd-playerData.obj: playerData.c
@AMDEP_TRUE@	source='playerData.c' object='mpd-playerData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-playerData.Po' tmpdepfile='$(DEPDIR)/mpd-playerData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playerData.obj `cygpath -w playerData.c`

mpd-playerData.lo: playerData.c
@AMDEP_TRUE@	source='playerData.c' object='mpd-playerData.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-playerData.Plo' tmpdepfile='$(DEPDIR)/mpd-playerData.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playerData.lo `test -f 'playerData.c' || echo '$(srcdir)/'`playerData.c

mpd-playlist.o: playlist.c
@AMDEP_TRUE@	source='playlist.c' object='mpd-playlist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-playlist.Po' tmpdepfile='$(DEPDIR)/mpd-playlist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playlist.o `test -f 'playlist.c' || echo '$(srcdir)/'`playlist.c

mpd-playlist.obj: playlist.c
@AMDEP_TRUE@	source='playlist.c' object='mpd-playlist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-playlist.Po' tmpdepfile='$(DEPDIR)/mpd-playlist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playlist.obj `cygpath -w playlist.c`

mpd-playlist.lo: playlist.c
@AMDEP_TRUE@	source='playlist.c' object='mpd-playlist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-playlist.Plo' tmpdepfile='$(DEPDIR)/mpd-playlist.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playlist.lo `test -f 'playlist.c' || echo '$(srcdir)/'`playlist.c

mpd-replayGain.o: replayGain.c
@AMDEP_TRUE@	source='replayGain.c' object='mpd-replayGain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-replayGain.Po' tmpdepfile='$(DEPDIR)/mpd-replayGain.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-replayGain.o `test -f 'replayGain.c' || echo '$(srcdir)/'`replayGain.c

mpd-replayGain.obj: replayGain.c
@AMDEP_TRUE@	source='replayGain.c' object='mpd-replayGain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-replayGain.Po' tmpdepfile='$(DEPDIR)/mpd-replayGain.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-replayGain.obj `cygpath -w replayGain.c`

mpd-replayGain.lo: replayGain.c
@AMDEP_TRUE@	source='replayGain.c' object='mpd-replayGain.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-replayGain.Plo' tmpdepfile='$(DEPDIR)/mpd-replayGain.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-replayGain.lo `test -f 'replayGain.c' || echo '$(srcdir)/'`replayGain.c

mpd-sig_handlers.o: sig_handlers.c
@AMDEP_TRUE@	source='sig_handlers.c' object='mpd-sig_handlers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-sig_handlers.Po' tmpdepfile='$(DEPDIR)/mpd-sig_handlers.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sig_handlers.o `test -f 'sig_handlers.c' || echo '$(srcdir)/'`sig_handlers.c

mpd-sig_handlers.obj: sig_handlers.c
@AMDEP_TRUE@	source='sig_handlers.c' object='mpd-sig_handlers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-sig_handlers.Po' tmpdepfile='$(DEPDIR)/mpd-sig_handlers.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sig_handlers.obj `cygpath -w sig_handlers.c`

mpd-sig_handlers.lo: sig_handlers.c
@AMDEP_TRUE@	source='sig_handlers.c' object='mpd-sig_handlers.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-sig_handlers.Plo' tmpdepfile='$(DEPDIR)/mpd-sig_handlers.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sig_handlers.lo `test -f 'sig_handlers.c' || echo '$(srcdir)/'`sig_handlers.c

mpd-signal_check.o: signal_check.c
@AMDEP_TRUE@	source='signal_check.c' object='mpd-signal_check.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-signal_check.Po' tmpdepfile='$(DEPDIR)/mpd-signal_check.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-signal_check.o `test -f 'signal_check.c' || echo '$(srcdir)/'`signal_check.c

mpd-signal_check.obj: signal_check.c
@AMDEP_TRUE@	source='signal_check.c' object='mpd-signal_check.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-signal_check.Po' tmpdepfile='$(DEPDIR)/mpd-signal_check.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-signal_check.obj `cygpath -w signal_check.c`

mpd-signal_check.lo: signal_check.c
@AMDEP_TRUE@	source='signal_check.c' object='mpd-signal_check.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-signal_check.Plo' tmpdepfile='$(DEPDIR)/mpd-signal_check.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-signal_check.lo `test -f 'signal_check.c' || echo '$(srcdir)/'`signal_check.c

mpd-sllist.o: sllist.c
@AMDEP_TRUE@	source='sllist.c' object='mpd-sllist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-sllist.Po' tmpdepfile='$(DEPDIR)/mpd-sllist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sllist.o `test -f 'sllist.c' || echo '$(srcdir)/'`sllist.c

mpd-sllist.obj: sllist.c
@AMDEP_TRUE@	source='sllist.c' object='mpd-sllist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-sllist.Po' tmpdepfile='$(DEPDIR)/mpd-sllist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sllist.obj `cygpath -w sllist.c`

mpd-sllist.lo: sllist.c
@AMDEP_TRUE@	source='sllist.c' object='mpd-sllist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-sllist.Plo' tmpdepfile='$(DEPDIR)/mpd-sllist.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sllist.lo `test -f 'sllist.c' || echo '$(srcdir)/'`sllist.c

mpd-song.o: song.c
@AMDEP_TRUE@	source='song.c' object='mpd-song.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-song.Po' tmpdepfile='$(DEPDIR)/mpd-song.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-song.o `test -f 'song.c' || echo '$(srcdir)/'`song.c

mpd-song.obj: song.c
@AMDEP_TRUE@	source='song.c' object='mpd-song.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-song.Po' tmpdepfile='$(DEPDIR)/mpd-song.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-song.obj `cygpath -w song.c`

mpd-song.lo: song.c
@AMDEP_TRUE@	source='song.c' object='mpd-song.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-song.Plo' tmpdepfile='$(DEPDIR)/mpd-song.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-song.lo `test -f 'song.c' || echo '$(srcdir)/'`song.c

mpd-state_file.o: state_file.c
@AMDEP_TRUE@	source='state_file.c' object='mpd-state_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-state_file.Po' tmpdepfile='$(DEPDIR)/mpd-state_file.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-state_file.o `test -f 'state_file.c' || echo '$(srcdir)/'`state_file.c

mpd-state_file.obj: state_file.c
@AMDEP_TRUE@	source='state_file.c' object='mpd-state_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-state_file.Po' tmpdepfile='$(DEPDIR)/mpd-state_file.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-state_file.obj `cygpath -w state_file.c`

mpd-state_file.lo: state_file.c
@AMDEP_TRUE@	source='state_file.c' object='mpd-state_file.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-state_file.Plo' tmpdepfile='$(DEPDIR)/mpd-state_file.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-state_file.lo `test -f 'state_file.c' || echo '$(srcdir)/'`state_file.c

mpd-stats.o: stats.c
@AMDEP_TRUE@	source='stats.c' object='mpd-stats.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-stats.Po' tmpdepfile='$(DEPDIR)/mpd-stats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-stats.o `test -f 'stats.c' || echo '$(srcdir)/'`stats.c

mpd-stats.obj: stats.c
@AMDEP_TRUE@	source='stats.c' object='mpd-stats.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-stats.Po' tmpdepfile='$(DEPDIR)/mpd-stats.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-stats.obj `cygpath -w stats.c`

mpd-stats.lo: stats.c
@AMDEP_TRUE@	source='stats.c' object='mpd-stats.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-stats.Plo' tmpdepfile='$(DEPDIR)/mpd-stats.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-stats.lo `test -f 'stats.c' || echo '$(srcdir)/'`stats.c

mpd-tag.o: tag.c
@AMDEP_TRUE@	source='tag.c' object='mpd-tag.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-tag.Po' tmpdepfile='$(DEPDIR)/mpd-tag.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tag.o `test -f 'tag.c' || echo '$(srcdir)/'`tag.c

mpd-tag.obj: tag.c
@AMDEP_TRUE@	source='tag.c' object='mpd-tag.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-tag.Po' tmpdepfile='$(DEPDIR)/mpd-tag.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tag.obj `cygpath -w tag.c`

mpd-tag.lo: tag.c
@AMDEP_TRUE@	source='tag.c' object='mpd-tag.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-tag.Plo' tmpdepfile='$(DEPDIR)/mpd-tag.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tag.lo `test -f 'tag.c' || echo '$(srcdir)/'`tag.c

mpd-tagTracker.o: tagTracker.c
@AMDEP_TRUE@	source='tagTracker.c' object='mpd-tagTracker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-tagTracker.Po' tmpdepfile='$(DEPDIR)/mpd-tagTracker.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tagTracker.o `test -f 'tagTracker.c' || echo '$(srcdir)/'`tagTracker.c

mpd-tagTracker.obj: tagTracker.c
@AMDEP_TRUE@	source='tagTracker.c' object='mpd-tagTracker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-tagTracker.Po' tmpdepfile='$(DEPDIR)/mpd-tagTracker.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tagTracker.obj `cygpath -w tagTracker.c`

mpd-tagTracker.lo: tagTracker.c
@AMDEP_TRUE@	source='tagTracker.c' object='mpd-tagTracker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-tagTracker.Plo' tmpdepfile='$(DEPDIR)/mpd-tagTracker.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tagTracker.lo `test -f 'tagTracker.c' || echo '$(srcdir)/'`tagTracker.c

mpd-tree.o: tree.c
@AMDEP_TRUE@	source='tree.c' object='mpd-tree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-tree.Po' tmpdepfile='$(DEPDIR)/mpd-tree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c

mpd-tree.obj: tree.c
@AMDEP_TRUE@	source='tree.c' object='mpd-tree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-tree.Po' tmpdepfile='$(DEPDIR)/mpd-tree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tree.obj `cygpath -w tree.c`

mpd-tree.lo: tree.c
@AMDEP_TRUE@	source='tree.c' object='mpd-tree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-tree.Plo' tmpdepfile='$(DEPDIR)/mpd-tree.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tree.lo `test -f 'tree.c' || echo '$(srcdir)/'`tree.c

mpd-utils.o: utils.c
@AMDEP_TRUE@	source='utils.c' object='mpd-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-utils.Po' tmpdepfile='$(DEPDIR)/mpd-utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

mpd-utils.obj: utils.c
@AMDEP_TRUE@	source='utils.c' object='mpd-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-utils.Po' tmpdepfile='$(DEPDIR)/mpd-utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utils.obj `cygpath -w utils.c`

mpd-utils.lo: utils.c
@AMDEP_TRUE@	source='utils.c' object='mpd-utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-utils.Plo' tmpdepfile='$(DEPDIR)/mpd-utils.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utils.lo `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

mpd-volume.o: volume.c
@AMDEP_TRUE@	source='volume.c' object='mpd-volume.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-volume.Po' tmpdepfile='$(DEPDIR)/mpd-volume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-volume.o `test -f 'volume.c' || echo '$(srcdir)/'`volume.c

mpd-volume.obj: volume.c
@AMDEP_TRUE@	source='volume.c' object='mpd-volume.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-volume.Po' tmpdepfile='$(DEPDIR)/mpd-volume.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-volume.obj `cygpath -w volume.c`

mpd-volume.lo: volume.c
@AMDEP_TRUE@	source='volume.c' object='mpd-volume.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-volume.Plo' tmpdepfile='$(DEPDIR)/mpd-volume.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-volume.lo `test -f 'volume.c' || echo '$(srcdir)/'`volume.c

mpd-utf8.o: utf8.c
@AMDEP_TRUE@	source='utf8.c' object='mpd-utf8.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-utf8.Po' tmpdepfile='$(DEPDIR)/mpd-utf8.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utf8.o `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c

mpd-utf8.obj: utf8.c
@AMDEP_TRUE@	source='utf8.c' object='mpd-utf8.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-utf8.Po' tmpdepfile='$(DEPDIR)/mpd-utf8.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utf8.obj `cygpath -w utf8.c`

mpd-utf8.lo: utf8.c
@AMDEP_TRUE@	source='utf8.c' object='mpd-utf8.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-utf8.Plo' tmpdepfile='$(DEPDIR)/mpd-utf8.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utf8.lo `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c

mpd-zeroconf.o: zeroconf.c
@AMDEP_TRUE@	source='zeroconf.c' object='mpd-zeroconf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-zeroconf.Po' tmpdepfile='$(DEPDIR)/mpd-zeroconf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-zeroconf.o `test -f 'zeroconf.c' || echo '$(srcdir)/'`zeroconf.c

mpd-zeroconf.obj: zeroconf.c
@AMDEP_TRUE@	source='zeroconf.c' object='mpd-zeroconf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-zeroconf.Po' tmpdepfile='$(DEPDIR)/mpd-zeroconf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-zeroconf.obj `cygpath -w zeroconf.c`

mpd-zeroconf.lo: zeroconf.c
@AMDEP_TRUE@	source='zeroconf.c' object='mpd-zeroconf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-zeroconf.Plo' tmpdepfile='$(DEPDIR)/mpd-zeroconf.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-zeroconf.lo `test -f 'zeroconf.c' || echo '$(srcdir)/'`zeroconf.c

mpd-locate.o: locate.c
@AMDEP_TRUE@	source='locate.c' object='mpd-locate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-locate.Po' tmpdepfile='$(DEPDIR)/mpd-locate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-locate.o `test -f 'locate.c' || echo '$(srcdir)/'`locate.c

mpd-locate.obj: locate.c
@AMDEP_TRUE@	source='locate.c' object='mpd-locate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-locate.Po' tmpdepfile='$(DEPDIR)/mpd-locate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-locate.obj `cygpath -w locate.c`

mpd-locate.lo: locate.c
@AMDEP_TRUE@	source='locate.c' object='mpd-locate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-locate.Plo' tmpdepfile='$(DEPDIR)/mpd-locate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-locate.lo `test -f 'locate.c' || echo '$(srcdir)/'`locate.c

mpd-storedPlaylist.o: storedPlaylist.c
@AMDEP_TRUE@	source='storedPlaylist.c' object='mpd-storedPlaylist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-storedPlaylist.Po' tmpdepfile='$(DEPDIR)/mpd-storedPlaylist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-storedPlaylist.o `test -f 'storedPlaylist.c' || echo '$(srcdir)/'`storedPlaylist.c

mpd-storedPlaylist.obj: storedPlaylist.c
@AMDEP_TRUE@	source='storedPlaylist.c' object='mpd-storedPlaylist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-storedPlaylist.Po' tmpdepfile='$(DEPDIR)/mpd-storedPlaylist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-storedPlaylist.obj `cygpath -w storedPlaylist.c`

mpd-storedPlaylist.lo: storedPlaylist.c
@AMDEP_TRUE@	source='storedPlaylist.c' object='mpd-storedPlaylist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mpd-storedPlaylist.Plo' tmpdepfile='$(DEPDIR)/mpd-storedPlaylist.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-storedPlaylist.lo `test -f 'storedPlaylist.c' || echo '$(srcdir)/'`storedPlaylist.c
CCDEPMODE = @CCDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool clean-recursive \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am dvi-recursive info info-am info-recursive install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	mostlyclean-recursive tags tags-recursive uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-info-recursive uninstall-recursive

sparse-check:
	for i in $(mpd_SOURCES); \
	do \
		$(SPARSE) -I. $(mpd_CFLAGS) $(SPARSE_FLAGS) $(srcdir)/$$i || exit; \
	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
