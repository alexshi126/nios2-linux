# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = mpd$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 =
am__objects_2 = mpd-audioOutput_alsa.$(OBJEXT) \
	mpd-audioOutput_ao.$(OBJEXT) mpd-audioOutput_oss.$(OBJEXT) \
	mpd-audioOutput_osx.$(OBJEXT) mpd-audioOutput_pulse.$(OBJEXT) \
	mpd-audioOutput_mvp.$(OBJEXT) mpd-audioOutput_shout.$(OBJEXT) \
	mpd-audioOutput_jack.$(OBJEXT)
am__objects_3 = mpd-_flac_common.$(OBJEXT) mpd-_ogg_common.$(OBJEXT) \
	mpd-oggflac_plugin.$(OBJEXT) mpd-oggvorbis_plugin.$(OBJEXT) \
	mpd-aac_plugin.$(OBJEXT) mpd-audiofile_plugin.$(OBJEXT) \
	mpd-flac_plugin.$(OBJEXT) mpd-mod_plugin.$(OBJEXT) \
	mpd-mp3_plugin.$(OBJEXT) mpd-mp4_plugin.$(OBJEXT) \
	mpd-mpc_plugin.$(OBJEXT)
am_mpd_OBJECTS = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	mpd-audio.$(OBJEXT) mpd-audioOutput.$(OBJEXT) \
	mpd-buffer2array.$(OBJEXT) mpd-charConv.$(OBJEXT) \
	mpd-command.$(OBJEXT) mpd-conf.$(OBJEXT) mpd-dbUtils.$(OBJEXT) \
	mpd-decode.$(OBJEXT) mpd-directory.$(OBJEXT) \
	mpd-inputPlugin.$(OBJEXT) mpd-inputStream.$(OBJEXT) \
	mpd-inputStream_file.$(OBJEXT) mpd-inputStream_http.$(OBJEXT) \
	mpd-interface.$(OBJEXT) mpd-list.$(OBJEXT) \
	mpd-listen.$(OBJEXT) mpd-log.$(OBJEXT) mpd-ls.$(OBJEXT) \
	mpd-main.$(OBJEXT) mpd-metadataChunk.$(OBJEXT) \
	mpd-myfprintf.$(OBJEXT) mpd-normalize.$(OBJEXT) \
	mpd-compress.$(OBJEXT) mpd-outputBuffer.$(OBJEXT) \
	mpd-path.$(OBJEXT) mpd-pcm_utils.$(OBJEXT) \
	mpd-permission.$(OBJEXT) mpd-player.$(OBJEXT) \
	mpd-playerData.$(OBJEXT) mpd-playlist.$(OBJEXT) \
	mpd-replayGain.$(OBJEXT) mpd-sig_handlers.$(OBJEXT) \
	mpd-signal_check.$(OBJEXT) mpd-sllist.$(OBJEXT) \
	mpd-song.$(OBJEXT) mpd-state_file.$(OBJEXT) \
	mpd-stats.$(OBJEXT) mpd-tag.$(OBJEXT) mpd-tagTracker.$(OBJEXT) \
	mpd-tree.$(OBJEXT) mpd-utils.$(OBJEXT) mpd-volume.$(OBJEXT) \
	mpd-utf8.$(OBJEXT) mpd-zeroconf.$(OBJEXT) mpd-locate.$(OBJEXT) \
	mpd-storedPlaylist.$(OBJEXT)
mpd_OBJECTS = $(am_mpd_OBJECTS)
am__DEPENDENCIES_1 =
mpd_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(mpd_SOURCES)
DIST_SOURCES = $(mpd_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_LIBS = @ALSA_LIBS@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AO_CFLAGS = @AO_CFLAGS@
AO_LIBS = @AO_LIBS@
AR = @AR@
AUDIOFILE_CFLAGS = @AUDIOFILE_CFLAGS@
AUDIOFILE_CONFIG = @AUDIOFILE_CONFIG@
AUDIOFILE_LIBS = @AUDIOFILE_LIBS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AVAHI_CFLAGS = @AVAHI_CFLAGS@
AVAHI_LIBS = @AVAHI_LIBS@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JACK_CFLAGS = @JACK_CFLAGS@
JACK_LIBS = @JACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBFLAC_CFLAGS = @LIBFLAC_CFLAGS@
LIBFLAC_LIBS = @LIBFLAC_LIBS@
LIBMIKMOD_CFLAGS = @LIBMIKMOD_CFLAGS@
LIBMIKMOD_CONFIG = @LIBMIKMOD_CONFIG@
LIBMIKMOD_LDADD = @LIBMIKMOD_LDADD@
LIBMIKMOD_LIBS = @LIBMIKMOD_LIBS@
LIBOBJS = @LIBOBJS@
LIBOGGFLAC_CFLAGS = @LIBOGGFLAC_CFLAGS@
LIBOGGFLAC_LIBS = @LIBOGGFLAC_LIBS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MP4FF_LIB = @MP4FF_LIB@
MP4FF_SUBDIR = @MP4FF_SUBDIR@
MPD_CFLAGS = @MPD_CFLAGS@
MPD_LIBS = @MPD_LIBS@
OBJEXT = @OBJEXT@
OGG_CFLAGS = @OGG_CFLAGS@
OGG_LIBS = @OGG_LIBS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKGCONFIG = @PKGCONFIG@
PKG_CONFIG = @PKG_CONFIG@
PULSE_CFLAGS = @PULSE_CFLAGS@
PULSE_LIBS = @PULSE_LIBS@
RANLIB = @RANLIB@
SAMPLERATE_CFLAGS = @SAMPLERATE_CFLAGS@
SAMPLERATE_LIBS = @SAMPLERATE_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHOUTCONFIG = @SHOUTCONFIG@
STRIP = @STRIP@
VERSION = @VERSION@
VORBISENC_LIBS = @VORBISENC_LIBS@
VORBISFILE_LIBS = @VORBISFILE_LIBS@
VORBIS_CFLAGS = @VORBIS_CFLAGS@
VORBIS_LIBS = @VORBIS_LIBS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
SUBDIRS = $(MP4FF_SUBDIR)
mpd_audioOutputs = \
	audioOutputs/audioOutput_alsa.c \
	audioOutputs/audioOutput_ao.c \
	audioOutputs/audioOutput_oss.c \
	audioOutputs/audioOutput_osx.c \
	audioOutputs/audioOutput_pulse.c \
	audioOutputs/audioOutput_mvp.c \
	audioOutputs/audioOutput_shout.c \
	audioOutputs/audioOutput_jack.c

mpd_inputPlugins = \
	inputPlugins/_flac_common.c \
	inputPlugins/_ogg_common.c \
	inputPlugins/oggflac_plugin.c \
	inputPlugins/oggvorbis_plugin.c \
	inputPlugins/aac_plugin.c \
	inputPlugins/audiofile_plugin.c \
	inputPlugins/flac_plugin.c \
	inputPlugins/mod_plugin.c \
	inputPlugins/mp3_plugin.c \
	inputPlugins/mp4_plugin.c \
	inputPlugins/mpc_plugin.c

mpd_headers = \
	ack.h \
	audio.h \
	audioOutput.h \
	buffer2array.h \
	charConv.h \
	command.h \
	conf.h \
	dbUtils.h \
	decode.h \
	directory.h \
	gcc.h \
	inputPlugin.h \
	inputPlugins/_flac_common.h \
	inputPlugins/_ogg_common.h \
	inputStream.h \
	inputStream_file.h \
	inputStream_http.h \
	interface.h \
	list.h \
	listen.h \
	log.h \
	ls.h \
	metadataChunk.h \
	mpd_types.h \
	myfprintf.h \
	normalize.h \
	compress.h \
	outputBuffer.h \
	path.h \
	pcm_utils.h \
	permission.h \
	player.h \
	playerData.h \
	playlist.h \
	replayGain.h \
	signal_check.h \
	sig_handlers.h \
	sllist.h \
	song.h \
	state_file.h \
	stats.h \
	tag.h \
	tagTracker.h \
	tree.h \
	utf8.h \
	utils.h \
	volume.h \
	ioops.h \
	zeroconf.h \
	locate.h \
	storedPlaylist.h

mpd_SOURCES = \
	$(mpd_headers) \
	$(mpd_audioOutputs) \
	$(mpd_inputPlugins) \
	audio.c \
	audioOutput.c \
	buffer2array.c \
	charConv.c \
	command.c \
	conf.c \
	dbUtils.c \
	decode.c \
	directory.c \
	inputPlugin.c \
	inputStream.c \
	inputStream_file.c \
	inputStream_http.c \
	interface.c \
	list.c \
	listen.c \
	log.c \
	ls.c \
	main.c \
	metadataChunk.c \
	myfprintf.c \
	normalize.c \
	compress.c \
	outputBuffer.c \
	path.c \
	pcm_utils.c \
	permission.c \
	player.c \
	playerData.c \
	playlist.c \
	replayGain.c \
	sig_handlers.c \
	signal_check.c \
	sllist.c \
	song.c \
	state_file.c \
	stats.c \
	tag.c \
	tagTracker.c \
	tree.c \
	utils.c \
	volume.c \
	utf8.c \
	zeroconf.c \
	locate.c \
	storedPlaylist.c

mpd_CFLAGS = $(MPD_CFLAGS)
mpd_LDADD = $(MPD_LIBS) $(MP4FF_LIB)
DIST_SUBDIRS = mp4ff

# sparse is a semantic parser
# URL: git://www.kernel.org/pub/scm/devel/sparse/sparse.git
SPARSE = sparse
SPARSE_FLAGS = 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
mpd$(EXEEXT): $(mpd_OBJECTS) $(mpd_DEPENDENCIES) 
	@rm -f mpd$(EXEEXT)
	$(LINK) $(mpd_LDFLAGS) $(mpd_OBJECTS) $(mpd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-_flac_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-_ogg_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-aac_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_alsa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_ao.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_jack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_mvp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_oss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_osx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_pulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audioOutput_shout.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-audiofile_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-buffer2array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-charConv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-command.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-compress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-conf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-dbUtils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-decode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-directory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-flac_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-inputPlugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-inputStream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-inputStream_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-inputStream_http.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-interface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-listen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-locate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-ls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-metadataChunk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-mod_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-mp3_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-mp4_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-mpc_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-myfprintf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-normalize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-oggflac_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-oggvorbis_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-outputBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-pcm_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-permission.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-player.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-playerData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-playlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-replayGain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-sig_handlers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-signal_check.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-sllist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-song.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-state_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-stats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-storedPlaylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-tag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-tagTracker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-tree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-utf8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-volume.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpd-zeroconf.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mpd-audioOutput_alsa.o: audioOutputs/audioOutput_alsa.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_alsa.o -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_alsa.Tpo" -c -o mpd-audioOutput_alsa.o `test -f 'audioOutputs/audioOutput_alsa.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_alsa.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_alsa.Tpo" "$(DEPDIR)/mpd-audioOutput_alsa.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_alsa.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_alsa.c' object='mpd-audioOutput_alsa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_alsa.o `test -f 'audioOutputs/audioOutput_alsa.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_alsa.c

mpd-audioOutput_alsa.obj: audioOutputs/audioOutput_alsa.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_alsa.obj -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_alsa.Tpo" -c -o mpd-audioOutput_alsa.obj `if test -f 'audioOutputs/audioOutput_alsa.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_alsa.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_alsa.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_alsa.Tpo" "$(DEPDIR)/mpd-audioOutput_alsa.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_alsa.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_alsa.c' object='mpd-audioOutput_alsa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_alsa.obj `if test -f 'audioOutputs/audioOutput_alsa.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_alsa.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_alsa.c'; fi`

mpd-audioOutput_ao.o: audioOutputs/audioOutput_ao.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_ao.o -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_ao.Tpo" -c -o mpd-audioOutput_ao.o `test -f 'audioOutputs/audioOutput_ao.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_ao.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_ao.Tpo" "$(DEPDIR)/mpd-audioOutput_ao.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_ao.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_ao.c' object='mpd-audioOutput_ao.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_ao.o `test -f 'audioOutputs/audioOutput_ao.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_ao.c

mpd-audioOutput_ao.obj: audioOutputs/audioOutput_ao.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_ao.obj -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_ao.Tpo" -c -o mpd-audioOutput_ao.obj `if test -f 'audioOutputs/audioOutput_ao.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_ao.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_ao.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_ao.Tpo" "$(DEPDIR)/mpd-audioOutput_ao.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_ao.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_ao.c' object='mpd-audioOutput_ao.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_ao.obj `if test -f 'audioOutputs/audioOutput_ao.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_ao.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_ao.c'; fi`

mpd-audioOutput_oss.o: audioOutputs/audioOutput_oss.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_oss.o -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_oss.Tpo" -c -o mpd-audioOutput_oss.o `test -f 'audioOutputs/audioOutput_oss.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_oss.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_oss.Tpo" "$(DEPDIR)/mpd-audioOutput_oss.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_oss.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_oss.c' object='mpd-audioOutput_oss.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_oss.o `test -f 'audioOutputs/audioOutput_oss.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_oss.c

mpd-audioOutput_oss.obj: audioOutputs/audioOutput_oss.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_oss.obj -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_oss.Tpo" -c -o mpd-audioOutput_oss.obj `if test -f 'audioOutputs/audioOutput_oss.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_oss.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_oss.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_oss.Tpo" "$(DEPDIR)/mpd-audioOutput_oss.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_oss.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_oss.c' object='mpd-audioOutput_oss.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_oss.obj `if test -f 'audioOutputs/audioOutput_oss.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_oss.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_oss.c'; fi`

mpd-audioOutput_osx.o: audioOutputs/audioOutput_osx.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_osx.o -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_osx.Tpo" -c -o mpd-audioOutput_osx.o `test -f 'audioOutputs/audioOutput_osx.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_osx.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_osx.Tpo" "$(DEPDIR)/mpd-audioOutput_osx.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_osx.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_osx.c' object='mpd-audioOutput_osx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_osx.o `test -f 'audioOutputs/audioOutput_osx.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_osx.c

mpd-audioOutput_osx.obj: audioOutputs/audioOutput_osx.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_osx.obj -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_osx.Tpo" -c -o mpd-audioOutput_osx.obj `if test -f 'audioOutputs/audioOutput_osx.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_osx.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_osx.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_osx.Tpo" "$(DEPDIR)/mpd-audioOutput_osx.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_osx.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_osx.c' object='mpd-audioOutput_osx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_osx.obj `if test -f 'audioOutputs/audioOutput_osx.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_osx.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_osx.c'; fi`

mpd-audioOutput_pulse.o: audioOutputs/audioOutput_pulse.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_pulse.o -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_pulse.Tpo" -c -o mpd-audioOutput_pulse.o `test -f 'audioOutputs/audioOutput_pulse.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_pulse.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_pulse.Tpo" "$(DEPDIR)/mpd-audioOutput_pulse.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_pulse.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_pulse.c' object='mpd-audioOutput_pulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_pulse.o `test -f 'audioOutputs/audioOutput_pulse.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_pulse.c

mpd-audioOutput_pulse.obj: audioOutputs/audioOutput_pulse.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_pulse.obj -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_pulse.Tpo" -c -o mpd-audioOutput_pulse.obj `if test -f 'audioOutputs/audioOutput_pulse.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_pulse.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_pulse.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_pulse.Tpo" "$(DEPDIR)/mpd-audioOutput_pulse.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_pulse.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_pulse.c' object='mpd-audioOutput_pulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_pulse.obj `if test -f 'audioOutputs/audioOutput_pulse.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_pulse.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_pulse.c'; fi`

mpd-audioOutput_mvp.o: audioOutputs/audioOutput_mvp.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_mvp.o -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_mvp.Tpo" -c -o mpd-audioOutput_mvp.o `test -f 'audioOutputs/audioOutput_mvp.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_mvp.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_mvp.Tpo" "$(DEPDIR)/mpd-audioOutput_mvp.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_mvp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_mvp.c' object='mpd-audioOutput_mvp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_mvp.o `test -f 'audioOutputs/audioOutput_mvp.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_mvp.c

mpd-audioOutput_mvp.obj: audioOutputs/audioOutput_mvp.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_mvp.obj -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_mvp.Tpo" -c -o mpd-audioOutput_mvp.obj `if test -f 'audioOutputs/audioOutput_mvp.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_mvp.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_mvp.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_mvp.Tpo" "$(DEPDIR)/mpd-audioOutput_mvp.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_mvp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_mvp.c' object='mpd-audioOutput_mvp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_mvp.obj `if test -f 'audioOutputs/audioOutput_mvp.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_mvp.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_mvp.c'; fi`

mpd-audioOutput_shout.o: audioOutputs/audioOutput_shout.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_shout.o -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_shout.Tpo" -c -o mpd-audioOutput_shout.o `test -f 'audioOutputs/audioOutput_shout.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_shout.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_shout.Tpo" "$(DEPDIR)/mpd-audioOutput_shout.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_shout.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_shout.c' object='mpd-audioOutput_shout.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_shout.o `test -f 'audioOutputs/audioOutput_shout.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_shout.c

mpd-audioOutput_shout.obj: audioOutputs/audioOutput_shout.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_shout.obj -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_shout.Tpo" -c -o mpd-audioOutput_shout.obj `if test -f 'audioOutputs/audioOutput_shout.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_shout.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_shout.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_shout.Tpo" "$(DEPDIR)/mpd-audioOutput_shout.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_shout.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_shout.c' object='mpd-audioOutput_shout.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_shout.obj `if test -f 'audioOutputs/audioOutput_shout.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_shout.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_shout.c'; fi`

mpd-audioOutput_jack.o: audioOutputs/audioOutput_jack.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_jack.o -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_jack.Tpo" -c -o mpd-audioOutput_jack.o `test -f 'audioOutputs/audioOutput_jack.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_jack.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_jack.Tpo" "$(DEPDIR)/mpd-audioOutput_jack.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_jack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_jack.c' object='mpd-audioOutput_jack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_jack.o `test -f 'audioOutputs/audioOutput_jack.c' || echo '$(srcdir)/'`audioOutputs/audioOutput_jack.c

mpd-audioOutput_jack.obj: audioOutputs/audioOutput_jack.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput_jack.obj -MD -MP -MF "$(DEPDIR)/mpd-audioOutput_jack.Tpo" -c -o mpd-audioOutput_jack.obj `if test -f 'audioOutputs/audioOutput_jack.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_jack.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_jack.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput_jack.Tpo" "$(DEPDIR)/mpd-audioOutput_jack.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput_jack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutputs/audioOutput_jack.c' object='mpd-audioOutput_jack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput_jack.obj `if test -f 'audioOutputs/audioOutput_jack.c'; then $(CYGPATH_W) 'audioOutputs/audioOutput_jack.c'; else $(CYGPATH_W) '$(srcdir)/audioOutputs/audioOutput_jack.c'; fi`

mpd-_flac_common.o: inputPlugins/_flac_common.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-_flac_common.o -MD -MP -MF "$(DEPDIR)/mpd-_flac_common.Tpo" -c -o mpd-_flac_common.o `test -f 'inputPlugins/_flac_common.c' || echo '$(srcdir)/'`inputPlugins/_flac_common.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-_flac_common.Tpo" "$(DEPDIR)/mpd-_flac_common.Po"; else rm -f "$(DEPDIR)/mpd-_flac_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/_flac_common.c' object='mpd-_flac_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_flac_common.o `test -f 'inputPlugins/_flac_common.c' || echo '$(srcdir)/'`inputPlugins/_flac_common.c

mpd-_flac_common.obj: inputPlugins/_flac_common.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-_flac_common.obj -MD -MP -MF "$(DEPDIR)/mpd-_flac_common.Tpo" -c -o mpd-_flac_common.obj `if test -f 'inputPlugins/_flac_common.c'; then $(CYGPATH_W) 'inputPlugins/_flac_common.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/_flac_common.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-_flac_common.Tpo" "$(DEPDIR)/mpd-_flac_common.Po"; else rm -f "$(DEPDIR)/mpd-_flac_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/_flac_common.c' object='mpd-_flac_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_flac_common.obj `if test -f 'inputPlugins/_flac_common.c'; then $(CYGPATH_W) 'inputPlugins/_flac_common.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/_flac_common.c'; fi`

mpd-_ogg_common.o: inputPlugins/_ogg_common.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-_ogg_common.o -MD -MP -MF "$(DEPDIR)/mpd-_ogg_common.Tpo" -c -o mpd-_ogg_common.o `test -f 'inputPlugins/_ogg_common.c' || echo '$(srcdir)/'`inputPlugins/_ogg_common.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-_ogg_common.Tpo" "$(DEPDIR)/mpd-_ogg_common.Po"; else rm -f "$(DEPDIR)/mpd-_ogg_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/_ogg_common.c' object='mpd-_ogg_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_ogg_common.o `test -f 'inputPlugins/_ogg_common.c' || echo '$(srcdir)/'`inputPlugins/_ogg_common.c

mpd-_ogg_common.obj: inputPlugins/_ogg_common.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-_ogg_common.obj -MD -MP -MF "$(DEPDIR)/mpd-_ogg_common.Tpo" -c -o mpd-_ogg_common.obj `if test -f 'inputPlugins/_ogg_common.c'; then $(CYGPATH_W) 'inputPlugins/_ogg_common.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/_ogg_common.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-_ogg_common.Tpo" "$(DEPDIR)/mpd-_ogg_common.Po"; else rm -f "$(DEPDIR)/mpd-_ogg_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/_ogg_common.c' object='mpd-_ogg_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-_ogg_common.obj `if test -f 'inputPlugins/_ogg_common.c'; then $(CYGPATH_W) 'inputPlugins/_ogg_common.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/_ogg_common.c'; fi`

mpd-oggflac_plugin.o: inputPlugins/oggflac_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-oggflac_plugin.o -MD -MP -MF "$(DEPDIR)/mpd-oggflac_plugin.Tpo" -c -o mpd-oggflac_plugin.o `test -f 'inputPlugins/oggflac_plugin.c' || echo '$(srcdir)/'`inputPlugins/oggflac_plugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-oggflac_plugin.Tpo" "$(DEPDIR)/mpd-oggflac_plugin.Po"; else rm -f "$(DEPDIR)/mpd-oggflac_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/oggflac_plugin.c' object='mpd-oggflac_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggflac_plugin.o `test -f 'inputPlugins/oggflac_plugin.c' || echo '$(srcdir)/'`inputPlugins/oggflac_plugin.c

mpd-oggflac_plugin.obj: inputPlugins/oggflac_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-oggflac_plugin.obj -MD -MP -MF "$(DEPDIR)/mpd-oggflac_plugin.Tpo" -c -o mpd-oggflac_plugin.obj `if test -f 'inputPlugins/oggflac_plugin.c'; then $(CYGPATH_W) 'inputPlugins/oggflac_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/oggflac_plugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-oggflac_plugin.Tpo" "$(DEPDIR)/mpd-oggflac_plugin.Po"; else rm -f "$(DEPDIR)/mpd-oggflac_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/oggflac_plugin.c' object='mpd-oggflac_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggflac_plugin.obj `if test -f 'inputPlugins/oggflac_plugin.c'; then $(CYGPATH_W) 'inputPlugins/oggflac_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/oggflac_plugin.c'; fi`

mpd-oggvorbis_plugin.o: inputPlugins/oggvorbis_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-oggvorbis_plugin.o -MD -MP -MF "$(DEPDIR)/mpd-oggvorbis_plugin.Tpo" -c -o mpd-oggvorbis_plugin.o `test -f 'inputPlugins/oggvorbis_plugin.c' || echo '$(srcdir)/'`inputPlugins/oggvorbis_plugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-oggvorbis_plugin.Tpo" "$(DEPDIR)/mpd-oggvorbis_plugin.Po"; else rm -f "$(DEPDIR)/mpd-oggvorbis_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/oggvorbis_plugin.c' object='mpd-oggvorbis_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggvorbis_plugin.o `test -f 'inputPlugins/oggvorbis_plugin.c' || echo '$(srcdir)/'`inputPlugins/oggvorbis_plugin.c

mpd-oggvorbis_plugin.obj: inputPlugins/oggvorbis_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-oggvorbis_plugin.obj -MD -MP -MF "$(DEPDIR)/mpd-oggvorbis_plugin.Tpo" -c -o mpd-oggvorbis_plugin.obj `if test -f 'inputPlugins/oggvorbis_plugin.c'; then $(CYGPATH_W) 'inputPlugins/oggvorbis_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/oggvorbis_plugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-oggvorbis_plugin.Tpo" "$(DEPDIR)/mpd-oggvorbis_plugin.Po"; else rm -f "$(DEPDIR)/mpd-oggvorbis_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/oggvorbis_plugin.c' object='mpd-oggvorbis_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-oggvorbis_plugin.obj `if test -f 'inputPlugins/oggvorbis_plugin.c'; then $(CYGPATH_W) 'inputPlugins/oggvorbis_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/oggvorbis_plugin.c'; fi`

mpd-aac_plugin.o: inputPlugins/aac_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-aac_plugin.o -MD -MP -MF "$(DEPDIR)/mpd-aac_plugin.Tpo" -c -o mpd-aac_plugin.o `test -f 'inputPlugins/aac_plugin.c' || echo '$(srcdir)/'`inputPlugins/aac_plugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-aac_plugin.Tpo" "$(DEPDIR)/mpd-aac_plugin.Po"; else rm -f "$(DEPDIR)/mpd-aac_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/aac_plugin.c' object='mpd-aac_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-aac_plugin.o `test -f 'inputPlugins/aac_plugin.c' || echo '$(srcdir)/'`inputPlugins/aac_plugin.c

mpd-aac_plugin.obj: inputPlugins/aac_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-aac_plugin.obj -MD -MP -MF "$(DEPDIR)/mpd-aac_plugin.Tpo" -c -o mpd-aac_plugin.obj `if test -f 'inputPlugins/aac_plugin.c'; then $(CYGPATH_W) 'inputPlugins/aac_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/aac_plugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-aac_plugin.Tpo" "$(DEPDIR)/mpd-aac_plugin.Po"; else rm -f "$(DEPDIR)/mpd-aac_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/aac_plugin.c' object='mpd-aac_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-aac_plugin.obj `if test -f 'inputPlugins/aac_plugin.c'; then $(CYGPATH_W) 'inputPlugins/aac_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/aac_plugin.c'; fi`

mpd-audiofile_plugin.o: inputPlugins/audiofile_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audiofile_plugin.o -MD -MP -MF "$(DEPDIR)/mpd-audiofile_plugin.Tpo" -c -o mpd-audiofile_plugin.o `test -f 'inputPlugins/audiofile_plugin.c' || echo '$(srcdir)/'`inputPlugins/audiofile_plugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audiofile_plugin.Tpo" "$(DEPDIR)/mpd-audiofile_plugin.Po"; else rm -f "$(DEPDIR)/mpd-audiofile_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/audiofile_plugin.c' object='mpd-audiofile_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audiofile_plugin.o `test -f 'inputPlugins/audiofile_plugin.c' || echo '$(srcdir)/'`inputPlugins/audiofile_plugin.c

mpd-audiofile_plugin.obj: inputPlugins/audiofile_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audiofile_plugin.obj -MD -MP -MF "$(DEPDIR)/mpd-audiofile_plugin.Tpo" -c -o mpd-audiofile_plugin.obj `if test -f 'inputPlugins/audiofile_plugin.c'; then $(CYGPATH_W) 'inputPlugins/audiofile_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/audiofile_plugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audiofile_plugin.Tpo" "$(DEPDIR)/mpd-audiofile_plugin.Po"; else rm -f "$(DEPDIR)/mpd-audiofile_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/audiofile_plugin.c' object='mpd-audiofile_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audiofile_plugin.obj `if test -f 'inputPlugins/audiofile_plugin.c'; then $(CYGPATH_W) 'inputPlugins/audiofile_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/audiofile_plugin.c'; fi`

mpd-flac_plugin.o: inputPlugins/flac_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-flac_plugin.o -MD -MP -MF "$(DEPDIR)/mpd-flac_plugin.Tpo" -c -o mpd-flac_plugin.o `test -f 'inputPlugins/flac_plugin.c' || echo '$(srcdir)/'`inputPlugins/flac_plugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-flac_plugin.Tpo" "$(DEPDIR)/mpd-flac_plugin.Po"; else rm -f "$(DEPDIR)/mpd-flac_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/flac_plugin.c' object='mpd-flac_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-flac_plugin.o `test -f 'inputPlugins/flac_plugin.c' || echo '$(srcdir)/'`inputPlugins/flac_plugin.c

mpd-flac_plugin.obj: inputPlugins/flac_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-flac_plugin.obj -MD -MP -MF "$(DEPDIR)/mpd-flac_plugin.Tpo" -c -o mpd-flac_plugin.obj `if test -f 'inputPlugins/flac_plugin.c'; then $(CYGPATH_W) 'inputPlugins/flac_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/flac_plugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-flac_plugin.Tpo" "$(DEPDIR)/mpd-flac_plugin.Po"; else rm -f "$(DEPDIR)/mpd-flac_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/flac_plugin.c' object='mpd-flac_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-flac_plugin.obj `if test -f 'inputPlugins/flac_plugin.c'; then $(CYGPATH_W) 'inputPlugins/flac_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/flac_plugin.c'; fi`

mpd-mod_plugin.o: inputPlugins/mod_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-mod_plugin.o -MD -MP -MF "$(DEPDIR)/mpd-mod_plugin.Tpo" -c -o mpd-mod_plugin.o `test -f 'inputPlugins/mod_plugin.c' || echo '$(srcdir)/'`inputPlugins/mod_plugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-mod_plugin.Tpo" "$(DEPDIR)/mpd-mod_plugin.Po"; else rm -f "$(DEPDIR)/mpd-mod_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/mod_plugin.c' object='mpd-mod_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mod_plugin.o `test -f 'inputPlugins/mod_plugin.c' || echo '$(srcdir)/'`inputPlugins/mod_plugin.c

mpd-mod_plugin.obj: inputPlugins/mod_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-mod_plugin.obj -MD -MP -MF "$(DEPDIR)/mpd-mod_plugin.Tpo" -c -o mpd-mod_plugin.obj `if test -f 'inputPlugins/mod_plugin.c'; then $(CYGPATH_W) 'inputPlugins/mod_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/mod_plugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-mod_plugin.Tpo" "$(DEPDIR)/mpd-mod_plugin.Po"; else rm -f "$(DEPDIR)/mpd-mod_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/mod_plugin.c' object='mpd-mod_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mod_plugin.obj `if test -f 'inputPlugins/mod_plugin.c'; then $(CYGPATH_W) 'inputPlugins/mod_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/mod_plugin.c'; fi`

mpd-mp3_plugin.o: inputPlugins/mp3_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-mp3_plugin.o -MD -MP -MF "$(DEPDIR)/mpd-mp3_plugin.Tpo" -c -o mpd-mp3_plugin.o `test -f 'inputPlugins/mp3_plugin.c' || echo '$(srcdir)/'`inputPlugins/mp3_plugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-mp3_plugin.Tpo" "$(DEPDIR)/mpd-mp3_plugin.Po"; else rm -f "$(DEPDIR)/mpd-mp3_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/mp3_plugin.c' object='mpd-mp3_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp3_plugin.o `test -f 'inputPlugins/mp3_plugin.c' || echo '$(srcdir)/'`inputPlugins/mp3_plugin.c

mpd-mp3_plugin.obj: inputPlugins/mp3_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-mp3_plugin.obj -MD -MP -MF "$(DEPDIR)/mpd-mp3_plugin.Tpo" -c -o mpd-mp3_plugin.obj `if test -f 'inputPlugins/mp3_plugin.c'; then $(CYGPATH_W) 'inputPlugins/mp3_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/mp3_plugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-mp3_plugin.Tpo" "$(DEPDIR)/mpd-mp3_plugin.Po"; else rm -f "$(DEPDIR)/mpd-mp3_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/mp3_plugin.c' object='mpd-mp3_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp3_plugin.obj `if test -f 'inputPlugins/mp3_plugin.c'; then $(CYGPATH_W) 'inputPlugins/mp3_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/mp3_plugin.c'; fi`

mpd-mp4_plugin.o: inputPlugins/mp4_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-mp4_plugin.o -MD -MP -MF "$(DEPDIR)/mpd-mp4_plugin.Tpo" -c -o mpd-mp4_plugin.o `test -f 'inputPlugins/mp4_plugin.c' || echo '$(srcdir)/'`inputPlugins/mp4_plugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-mp4_plugin.Tpo" "$(DEPDIR)/mpd-mp4_plugin.Po"; else rm -f "$(DEPDIR)/mpd-mp4_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/mp4_plugin.c' object='mpd-mp4_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp4_plugin.o `test -f 'inputPlugins/mp4_plugin.c' || echo '$(srcdir)/'`inputPlugins/mp4_plugin.c

mpd-mp4_plugin.obj: inputPlugins/mp4_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-mp4_plugin.obj -MD -MP -MF "$(DEPDIR)/mpd-mp4_plugin.Tpo" -c -o mpd-mp4_plugin.obj `if test -f 'inputPlugins/mp4_plugin.c'; then $(CYGPATH_W) 'inputPlugins/mp4_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/mp4_plugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-mp4_plugin.Tpo" "$(DEPDIR)/mpd-mp4_plugin.Po"; else rm -f "$(DEPDIR)/mpd-mp4_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/mp4_plugin.c' object='mpd-mp4_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mp4_plugin.obj `if test -f 'inputPlugins/mp4_plugin.c'; then $(CYGPATH_W) 'inputPlugins/mp4_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/mp4_plugin.c'; fi`

mpd-mpc_plugin.o: inputPlugins/mpc_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-mpc_plugin.o -MD -MP -MF "$(DEPDIR)/mpd-mpc_plugin.Tpo" -c -o mpd-mpc_plugin.o `test -f 'inputPlugins/mpc_plugin.c' || echo '$(srcdir)/'`inputPlugins/mpc_plugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-mpc_plugin.Tpo" "$(DEPDIR)/mpd-mpc_plugin.Po"; else rm -f "$(DEPDIR)/mpd-mpc_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/mpc_plugin.c' object='mpd-mpc_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mpc_plugin.o `test -f 'inputPlugins/mpc_plugin.c' || echo '$(srcdir)/'`inputPlugins/mpc_plugin.c

mpd-mpc_plugin.obj: inputPlugins/mpc_plugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-mpc_plugin.obj -MD -MP -MF "$(DEPDIR)/mpd-mpc_plugin.Tpo" -c -o mpd-mpc_plugin.obj `if test -f 'inputPlugins/mpc_plugin.c'; then $(CYGPATH_W) 'inputPlugins/mpc_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/mpc_plugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-mpc_plugin.Tpo" "$(DEPDIR)/mpd-mpc_plugin.Po"; else rm -f "$(DEPDIR)/mpd-mpc_plugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugins/mpc_plugin.c' object='mpd-mpc_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-mpc_plugin.obj `if test -f 'inputPlugins/mpc_plugin.c'; then $(CYGPATH_W) 'inputPlugins/mpc_plugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugins/mpc_plugin.c'; fi`

mpd-audio.o: audio.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audio.o -MD -MP -MF "$(DEPDIR)/mpd-audio.Tpo" -c -o mpd-audio.o `test -f 'audio.c' || echo '$(srcdir)/'`audio.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audio.Tpo" "$(DEPDIR)/mpd-audio.Po"; else rm -f "$(DEPDIR)/mpd-audio.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audio.c' object='mpd-audio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audio.o `test -f 'audio.c' || echo '$(srcdir)/'`audio.c

mpd-audio.obj: audio.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audio.obj -MD -MP -MF "$(DEPDIR)/mpd-audio.Tpo" -c -o mpd-audio.obj `if test -f 'audio.c'; then $(CYGPATH_W) 'audio.c'; else $(CYGPATH_W) '$(srcdir)/audio.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audio.Tpo" "$(DEPDIR)/mpd-audio.Po"; else rm -f "$(DEPDIR)/mpd-audio.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audio.c' object='mpd-audio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audio.obj `if test -f 'audio.c'; then $(CYGPATH_W) 'audio.c'; else $(CYGPATH_W) '$(srcdir)/audio.c'; fi`

mpd-audioOutput.o: audioOutput.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput.o -MD -MP -MF "$(DEPDIR)/mpd-audioOutput.Tpo" -c -o mpd-audioOutput.o `test -f 'audioOutput.c' || echo '$(srcdir)/'`audioOutput.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput.Tpo" "$(DEPDIR)/mpd-audioOutput.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutput.c' object='mpd-audioOutput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput.o `test -f 'audioOutput.c' || echo '$(srcdir)/'`audioOutput.c

mpd-audioOutput.obj: audioOutput.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-audioOutput.obj -MD -MP -MF "$(DEPDIR)/mpd-audioOutput.Tpo" -c -o mpd-audioOutput.obj `if test -f 'audioOutput.c'; then $(CYGPATH_W) 'audioOutput.c'; else $(CYGPATH_W) '$(srcdir)/audioOutput.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-audioOutput.Tpo" "$(DEPDIR)/mpd-audioOutput.Po"; else rm -f "$(DEPDIR)/mpd-audioOutput.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='audioOutput.c' object='mpd-audioOutput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-audioOutput.obj `if test -f 'audioOutput.c'; then $(CYGPATH_W) 'audioOutput.c'; else $(CYGPATH_W) '$(srcdir)/audioOutput.c'; fi`

mpd-buffer2array.o: buffer2array.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-buffer2array.o -MD -MP -MF "$(DEPDIR)/mpd-buffer2array.Tpo" -c -o mpd-buffer2array.o `test -f 'buffer2array.c' || echo '$(srcdir)/'`buffer2array.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-buffer2array.Tpo" "$(DEPDIR)/mpd-buffer2array.Po"; else rm -f "$(DEPDIR)/mpd-buffer2array.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='buffer2array.c' object='mpd-buffer2array.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-buffer2array.o `test -f 'buffer2array.c' || echo '$(srcdir)/'`buffer2array.c

mpd-buffer2array.obj: buffer2array.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-buffer2array.obj -MD -MP -MF "$(DEPDIR)/mpd-buffer2array.Tpo" -c -o mpd-buffer2array.obj `if test -f 'buffer2array.c'; then $(CYGPATH_W) 'buffer2array.c'; else $(CYGPATH_W) '$(srcdir)/buffer2array.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-buffer2array.Tpo" "$(DEPDIR)/mpd-buffer2array.Po"; else rm -f "$(DEPDIR)/mpd-buffer2array.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='buffer2array.c' object='mpd-buffer2array.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-buffer2array.obj `if test -f 'buffer2array.c'; then $(CYGPATH_W) 'buffer2array.c'; else $(CYGPATH_W) '$(srcdir)/buffer2array.c'; fi`

mpd-charConv.o: charConv.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-charConv.o -MD -MP -MF "$(DEPDIR)/mpd-charConv.Tpo" -c -o mpd-charConv.o `test -f 'charConv.c' || echo '$(srcdir)/'`charConv.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-charConv.Tpo" "$(DEPDIR)/mpd-charConv.Po"; else rm -f "$(DEPDIR)/mpd-charConv.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='charConv.c' object='mpd-charConv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-charConv.o `test -f 'charConv.c' || echo '$(srcdir)/'`charConv.c

mpd-charConv.obj: charConv.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-charConv.obj -MD -MP -MF "$(DEPDIR)/mpd-charConv.Tpo" -c -o mpd-charConv.obj `if test -f 'charConv.c'; then $(CYGPATH_W) 'charConv.c'; else $(CYGPATH_W) '$(srcdir)/charConv.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-charConv.Tpo" "$(DEPDIR)/mpd-charConv.Po"; else rm -f "$(DEPDIR)/mpd-charConv.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='charConv.c' object='mpd-charConv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-charConv.obj `if test -f 'charConv.c'; then $(CYGPATH_W) 'charConv.c'; else $(CYGPATH_W) '$(srcdir)/charConv.c'; fi`

mpd-command.o: command.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-command.o -MD -MP -MF "$(DEPDIR)/mpd-command.Tpo" -c -o mpd-command.o `test -f 'command.c' || echo '$(srcdir)/'`command.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-command.Tpo" "$(DEPDIR)/mpd-command.Po"; else rm -f "$(DEPDIR)/mpd-command.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='command.c' object='mpd-command.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-command.o `test -f 'command.c' || echo '$(srcdir)/'`command.c

mpd-command.obj: command.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-command.obj -MD -MP -MF "$(DEPDIR)/mpd-command.Tpo" -c -o mpd-command.obj `if test -f 'command.c'; then $(CYGPATH_W) 'command.c'; else $(CYGPATH_W) '$(srcdir)/command.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-command.Tpo" "$(DEPDIR)/mpd-command.Po"; else rm -f "$(DEPDIR)/mpd-command.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='command.c' object='mpd-command.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-command.obj `if test -f 'command.c'; then $(CYGPATH_W) 'command.c'; else $(CYGPATH_W) '$(srcdir)/command.c'; fi`

mpd-conf.o: conf.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-conf.o -MD -MP -MF "$(DEPDIR)/mpd-conf.Tpo" -c -o mpd-conf.o `test -f 'conf.c' || echo '$(srcdir)/'`conf.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-conf.Tpo" "$(DEPDIR)/mpd-conf.Po"; else rm -f "$(DEPDIR)/mpd-conf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='conf.c' object='mpd-conf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-conf.o `test -f 'conf.c' || echo '$(srcdir)/'`conf.c

mpd-conf.obj: conf.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-conf.obj -MD -MP -MF "$(DEPDIR)/mpd-conf.Tpo" -c -o mpd-conf.obj `if test -f 'conf.c'; then $(CYGPATH_W) 'conf.c'; else $(CYGPATH_W) '$(srcdir)/conf.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-conf.Tpo" "$(DEPDIR)/mpd-conf.Po"; else rm -f "$(DEPDIR)/mpd-conf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='conf.c' object='mpd-conf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-conf.obj `if test -f 'conf.c'; then $(CYGPATH_W) 'conf.c'; else $(CYGPATH_W) '$(srcdir)/conf.c'; fi`

mpd-dbUtils.o: dbUtils.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-dbUtils.o -MD -MP -MF "$(DEPDIR)/mpd-dbUtils.Tpo" -c -o mpd-dbUtils.o `test -f 'dbUtils.c' || echo '$(srcdir)/'`dbUtils.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-dbUtils.Tpo" "$(DEPDIR)/mpd-dbUtils.Po"; else rm -f "$(DEPDIR)/mpd-dbUtils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dbUtils.c' object='mpd-dbUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-dbUtils.o `test -f 'dbUtils.c' || echo '$(srcdir)/'`dbUtils.c

mpd-dbUtils.obj: dbUtils.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-dbUtils.obj -MD -MP -MF "$(DEPDIR)/mpd-dbUtils.Tpo" -c -o mpd-dbUtils.obj `if test -f 'dbUtils.c'; then $(CYGPATH_W) 'dbUtils.c'; else $(CYGPATH_W) '$(srcdir)/dbUtils.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-dbUtils.Tpo" "$(DEPDIR)/mpd-dbUtils.Po"; else rm -f "$(DEPDIR)/mpd-dbUtils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='dbUtils.c' object='mpd-dbUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-dbUtils.obj `if test -f 'dbUtils.c'; then $(CYGPATH_W) 'dbUtils.c'; else $(CYGPATH_W) '$(srcdir)/dbUtils.c'; fi`

mpd-decode.o: decode.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-decode.o -MD -MP -MF "$(DEPDIR)/mpd-decode.Tpo" -c -o mpd-decode.o `test -f 'decode.c' || echo '$(srcdir)/'`decode.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-decode.Tpo" "$(DEPDIR)/mpd-decode.Po"; else rm -f "$(DEPDIR)/mpd-decode.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='decode.c' object='mpd-decode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-decode.o `test -f 'decode.c' || echo '$(srcdir)/'`decode.c

mpd-decode.obj: decode.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-decode.obj -MD -MP -MF "$(DEPDIR)/mpd-decode.Tpo" -c -o mpd-decode.obj `if test -f 'decode.c'; then $(CYGPATH_W) 'decode.c'; else $(CYGPATH_W) '$(srcdir)/decode.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-decode.Tpo" "$(DEPDIR)/mpd-decode.Po"; else rm -f "$(DEPDIR)/mpd-decode.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='decode.c' object='mpd-decode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-decode.obj `if test -f 'decode.c'; then $(CYGPATH_W) 'decode.c'; else $(CYGPATH_W) '$(srcdir)/decode.c'; fi`

mpd-directory.o: directory.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-directory.o -MD -MP -MF "$(DEPDIR)/mpd-directory.Tpo" -c -o mpd-directory.o `test -f 'directory.c' || echo '$(srcdir)/'`directory.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-directory.Tpo" "$(DEPDIR)/mpd-directory.Po"; else rm -f "$(DEPDIR)/mpd-directory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='directory.c' object='mpd-directory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-directory.o `test -f 'directory.c' || echo '$(srcdir)/'`directory.c

mpd-directory.obj: directory.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-directory.obj -MD -MP -MF "$(DEPDIR)/mpd-directory.Tpo" -c -o mpd-directory.obj `if test -f 'directory.c'; then $(CYGPATH_W) 'directory.c'; else $(CYGPATH_W) '$(srcdir)/directory.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-directory.Tpo" "$(DEPDIR)/mpd-directory.Po"; else rm -f "$(DEPDIR)/mpd-directory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='directory.c' object='mpd-directory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-directory.obj `if test -f 'directory.c'; then $(CYGPATH_W) 'directory.c'; else $(CYGPATH_W) '$(srcdir)/directory.c'; fi`

mpd-inputPlugin.o: inputPlugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-inputPlugin.o -MD -MP -MF "$(DEPDIR)/mpd-inputPlugin.Tpo" -c -o mpd-inputPlugin.o `test -f 'inputPlugin.c' || echo '$(srcdir)/'`inputPlugin.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-inputPlugin.Tpo" "$(DEPDIR)/mpd-inputPlugin.Po"; else rm -f "$(DEPDIR)/mpd-inputPlugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugin.c' object='mpd-inputPlugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputPlugin.o `test -f 'inputPlugin.c' || echo '$(srcdir)/'`inputPlugin.c

mpd-inputPlugin.obj: inputPlugin.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-inputPlugin.obj -MD -MP -MF "$(DEPDIR)/mpd-inputPlugin.Tpo" -c -o mpd-inputPlugin.obj `if test -f 'inputPlugin.c'; then $(CYGPATH_W) 'inputPlugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugin.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-inputPlugin.Tpo" "$(DEPDIR)/mpd-inputPlugin.Po"; else rm -f "$(DEPDIR)/mpd-inputPlugin.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputPlugin.c' object='mpd-inputPlugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputPlugin.obj `if test -f 'inputPlugin.c'; then $(CYGPATH_W) 'inputPlugin.c'; else $(CYGPATH_W) '$(srcdir)/inputPlugin.c'; fi`

mpd-inputStream.o: inputStream.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-inputStream.o -MD -MP -MF "$(DEPDIR)/mpd-inputStream.Tpo" -c -o mpd-inputStream.o `test -f 'inputStream.c' || echo '$(srcdir)/'`inputStream.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-inputStream.Tpo" "$(DEPDIR)/mpd-inputStream.Po"; else rm -f "$(DEPDIR)/mpd-inputStream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputStream.c' object='mpd-inputStream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream.o `test -f 'inputStream.c' || echo '$(srcdir)/'`inputStream.c

mpd-inputStream.obj: inputStream.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-inputStream.obj -MD -MP -MF "$(DEPDIR)/mpd-inputStream.Tpo" -c -o mpd-inputStream.obj `if test -f 'inputStream.c'; then $(CYGPATH_W) 'inputStream.c'; else $(CYGPATH_W) '$(srcdir)/inputStream.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-inputStream.Tpo" "$(DEPDIR)/mpd-inputStream.Po"; else rm -f "$(DEPDIR)/mpd-inputStream.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputStream.c' object='mpd-inputStream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream.obj `if test -f 'inputStream.c'; then $(CYGPATH_W) 'inputStream.c'; else $(CYGPATH_W) '$(srcdir)/inputStream.c'; fi`

mpd-inputStream_file.o: inputStream_file.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-inputStream_file.o -MD -MP -MF "$(DEPDIR)/mpd-inputStream_file.Tpo" -c -o mpd-inputStream_file.o `test -f 'inputStream_file.c' || echo '$(srcdir)/'`inputStream_file.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-inputStream_file.Tpo" "$(DEPDIR)/mpd-inputStream_file.Po"; else rm -f "$(DEPDIR)/mpd-inputStream_file.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputStream_file.c' object='mpd-inputStream_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_file.o `test -f 'inputStream_file.c' || echo '$(srcdir)/'`inputStream_file.c

mpd-inputStream_file.obj: inputStream_file.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-inputStream_file.obj -MD -MP -MF "$(DEPDIR)/mpd-inputStream_file.Tpo" -c -o mpd-inputStream_file.obj `if test -f 'inputStream_file.c'; then $(CYGPATH_W) 'inputStream_file.c'; else $(CYGPATH_W) '$(srcdir)/inputStream_file.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-inputStream_file.Tpo" "$(DEPDIR)/mpd-inputStream_file.Po"; else rm -f "$(DEPDIR)/mpd-inputStream_file.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputStream_file.c' object='mpd-inputStream_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_file.obj `if test -f 'inputStream_file.c'; then $(CYGPATH_W) 'inputStream_file.c'; else $(CYGPATH_W) '$(srcdir)/inputStream_file.c'; fi`

mpd-inputStream_http.o: inputStream_http.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-inputStream_http.o -MD -MP -MF "$(DEPDIR)/mpd-inputStream_http.Tpo" -c -o mpd-inputStream_http.o `test -f 'inputStream_http.c' || echo '$(srcdir)/'`inputStream_http.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-inputStream_http.Tpo" "$(DEPDIR)/mpd-inputStream_http.Po"; else rm -f "$(DEPDIR)/mpd-inputStream_http.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputStream_http.c' object='mpd-inputStream_http.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_http.o `test -f 'inputStream_http.c' || echo '$(srcdir)/'`inputStream_http.c

mpd-inputStream_http.obj: inputStream_http.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-inputStream_http.obj -MD -MP -MF "$(DEPDIR)/mpd-inputStream_http.Tpo" -c -o mpd-inputStream_http.obj `if test -f 'inputStream_http.c'; then $(CYGPATH_W) 'inputStream_http.c'; else $(CYGPATH_W) '$(srcdir)/inputStream_http.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-inputStream_http.Tpo" "$(DEPDIR)/mpd-inputStream_http.Po"; else rm -f "$(DEPDIR)/mpd-inputStream_http.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='inputStream_http.c' object='mpd-inputStream_http.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-inputStream_http.obj `if test -f 'inputStream_http.c'; then $(CYGPATH_W) 'inputStream_http.c'; else $(CYGPATH_W) '$(srcdir)/inputStream_http.c'; fi`

mpd-interface.o: interface.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-interface.o -MD -MP -MF "$(DEPDIR)/mpd-interface.Tpo" -c -o mpd-interface.o `test -f 'interface.c' || echo '$(srcdir)/'`interface.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-interface.Tpo" "$(DEPDIR)/mpd-interface.Po"; else rm -f "$(DEPDIR)/mpd-interface.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='interface.c' object='mpd-interface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-interface.o `test -f 'interface.c' || echo '$(srcdir)/'`interface.c

mpd-interface.obj: interface.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-interface.obj -MD -MP -MF "$(DEPDIR)/mpd-interface.Tpo" -c -o mpd-interface.obj `if test -f 'interface.c'; then $(CYGPATH_W) 'interface.c'; else $(CYGPATH_W) '$(srcdir)/interface.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-interface.Tpo" "$(DEPDIR)/mpd-interface.Po"; else rm -f "$(DEPDIR)/mpd-interface.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='interface.c' object='mpd-interface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-interface.obj `if test -f 'interface.c'; then $(CYGPATH_W) 'interface.c'; else $(CYGPATH_W) '$(srcdir)/interface.c'; fi`

mpd-list.o: list.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-list.o -MD -MP -MF "$(DEPDIR)/mpd-list.Tpo" -c -o mpd-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-list.Tpo" "$(DEPDIR)/mpd-list.Po"; else rm -f "$(DEPDIR)/mpd-list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='list.c' object='mpd-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-list.o `test -f 'list.c' || echo '$(srcdir)/'`list.c

mpd-list.obj: list.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-list.obj -MD -MP -MF "$(DEPDIR)/mpd-list.Tpo" -c -o mpd-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-list.Tpo" "$(DEPDIR)/mpd-list.Po"; else rm -f "$(DEPDIR)/mpd-list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='list.c' object='mpd-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-list.obj `if test -f 'list.c'; then $(CYGPATH_W) 'list.c'; else $(CYGPATH_W) '$(srcdir)/list.c'; fi`

mpd-listen.o: listen.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-listen.o -MD -MP -MF "$(DEPDIR)/mpd-listen.Tpo" -c -o mpd-listen.o `test -f 'listen.c' || echo '$(srcdir)/'`listen.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-listen.Tpo" "$(DEPDIR)/mpd-listen.Po"; else rm -f "$(DEPDIR)/mpd-listen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='listen.c' object='mpd-listen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-listen.o `test -f 'listen.c' || echo '$(srcdir)/'`listen.c

mpd-listen.obj: listen.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-listen.obj -MD -MP -MF "$(DEPDIR)/mpd-listen.Tpo" -c -o mpd-listen.obj `if test -f 'listen.c'; then $(CYGPATH_W) 'listen.c'; else $(CYGPATH_W) '$(srcdir)/listen.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-listen.Tpo" "$(DEPDIR)/mpd-listen.Po"; else rm -f "$(DEPDIR)/mpd-listen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='listen.c' object='mpd-listen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-listen.obj `if test -f 'listen.c'; then $(CYGPATH_W) 'listen.c'; else $(CYGPATH_W) '$(srcdir)/listen.c'; fi`

mpd-log.o: log.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-log.o -MD -MP -MF "$(DEPDIR)/mpd-log.Tpo" -c -o mpd-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-log.Tpo" "$(DEPDIR)/mpd-log.Po"; else rm -f "$(DEPDIR)/mpd-log.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='log.c' object='mpd-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c

mpd-log.obj: log.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-log.obj -MD -MP -MF "$(DEPDIR)/mpd-log.Tpo" -c -o mpd-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-log.Tpo" "$(DEPDIR)/mpd-log.Po"; else rm -f "$(DEPDIR)/mpd-log.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='log.c' object='mpd-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`

mpd-ls.o: ls.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-ls.o -MD -MP -MF "$(DEPDIR)/mpd-ls.Tpo" -c -o mpd-ls.o `test -f 'ls.c' || echo '$(srcdir)/'`ls.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-ls.Tpo" "$(DEPDIR)/mpd-ls.Po"; else rm -f "$(DEPDIR)/mpd-ls.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ls.c' object='mpd-ls.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-ls.o `test -f 'ls.c' || echo '$(srcdir)/'`ls.c

mpd-ls.obj: ls.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-ls.obj -MD -MP -MF "$(DEPDIR)/mpd-ls.Tpo" -c -o mpd-ls.obj `if test -f 'ls.c'; then $(CYGPATH_W) 'ls.c'; else $(CYGPATH_W) '$(srcdir)/ls.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-ls.Tpo" "$(DEPDIR)/mpd-ls.Po"; else rm -f "$(DEPDIR)/mpd-ls.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ls.c' object='mpd-ls.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-ls.obj `if test -f 'ls.c'; then $(CYGPATH_W) 'ls.c'; else $(CYGPATH_W) '$(srcdir)/ls.c'; fi`

mpd-main.o: main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-main.o -MD -MP -MF "$(DEPDIR)/mpd-main.Tpo" -c -o mpd-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-main.Tpo" "$(DEPDIR)/mpd-main.Po"; else rm -f "$(DEPDIR)/mpd-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='main.c' object='mpd-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

mpd-main.obj: main.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-main.obj -MD -MP -MF "$(DEPDIR)/mpd-main.Tpo" -c -o mpd-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-main.Tpo" "$(DEPDIR)/mpd-main.Po"; else rm -f "$(DEPDIR)/mpd-main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='main.c' object='mpd-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

mpd-metadataChunk.o: metadataChunk.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-metadataChunk.o -MD -MP -MF "$(DEPDIR)/mpd-metadataChunk.Tpo" -c -o mpd-metadataChunk.o `test -f 'metadataChunk.c' || echo '$(srcdir)/'`metadataChunk.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-metadataChunk.Tpo" "$(DEPDIR)/mpd-metadataChunk.Po"; else rm -f "$(DEPDIR)/mpd-metadataChunk.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='metadataChunk.c' object='mpd-metadataChunk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-metadataChunk.o `test -f 'metadataChunk.c' || echo '$(srcdir)/'`metadataChunk.c

mpd-metadataChunk.obj: metadataChunk.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-metadataChunk.obj -MD -MP -MF "$(DEPDIR)/mpd-metadataChunk.Tpo" -c -o mpd-metadataChunk.obj `if test -f 'metadataChunk.c'; then $(CYGPATH_W) 'metadataChunk.c'; else $(CYGPATH_W) '$(srcdir)/metadataChunk.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-metadataChunk.Tpo" "$(DEPDIR)/mpd-metadataChunk.Po"; else rm -f "$(DEPDIR)/mpd-metadataChunk.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='metadataChunk.c' object='mpd-metadataChunk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-metadataChunk.obj `if test -f 'metadataChunk.c'; then $(CYGPATH_W) 'metadataChunk.c'; else $(CYGPATH_W) '$(srcdir)/metadataChunk.c'; fi`

mpd-myfprintf.o: myfprintf.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-myfprintf.o -MD -MP -MF "$(DEPDIR)/mpd-myfprintf.Tpo" -c -o mpd-myfprintf.o `test -f 'myfprintf.c' || echo '$(srcdir)/'`myfprintf.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-myfprintf.Tpo" "$(DEPDIR)/mpd-myfprintf.Po"; else rm -f "$(DEPDIR)/mpd-myfprintf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='myfprintf.c' object='mpd-myfprintf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-myfprintf.o `test -f 'myfprintf.c' || echo '$(srcdir)/'`myfprintf.c

mpd-myfprintf.obj: myfprintf.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-myfprintf.obj -MD -MP -MF "$(DEPDIR)/mpd-myfprintf.Tpo" -c -o mpd-myfprintf.obj `if test -f 'myfprintf.c'; then $(CYGPATH_W) 'myfprintf.c'; else $(CYGPATH_W) '$(srcdir)/myfprintf.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-myfprintf.Tpo" "$(DEPDIR)/mpd-myfprintf.Po"; else rm -f "$(DEPDIR)/mpd-myfprintf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='myfprintf.c' object='mpd-myfprintf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-myfprintf.obj `if test -f 'myfprintf.c'; then $(CYGPATH_W) 'myfprintf.c'; else $(CYGPATH_W) '$(srcdir)/myfprintf.c'; fi`

mpd-normalize.o: normalize.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-normalize.o -MD -MP -MF "$(DEPDIR)/mpd-normalize.Tpo" -c -o mpd-normalize.o `test -f 'normalize.c' || echo '$(srcdir)/'`normalize.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-normalize.Tpo" "$(DEPDIR)/mpd-normalize.Po"; else rm -f "$(DEPDIR)/mpd-normalize.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='normalize.c' object='mpd-normalize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-normalize.o `test -f 'normalize.c' || echo '$(srcdir)/'`normalize.c

mpd-normalize.obj: normalize.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-normalize.obj -MD -MP -MF "$(DEPDIR)/mpd-normalize.Tpo" -c -o mpd-normalize.obj `if test -f 'normalize.c'; then $(CYGPATH_W) 'normalize.c'; else $(CYGPATH_W) '$(srcdir)/normalize.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-normalize.Tpo" "$(DEPDIR)/mpd-normalize.Po"; else rm -f "$(DEPDIR)/mpd-normalize.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='normalize.c' object='mpd-normalize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-normalize.obj `if test -f 'normalize.c'; then $(CYGPATH_W) 'normalize.c'; else $(CYGPATH_W) '$(srcdir)/normalize.c'; fi`

mpd-compress.o: compress.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-compress.o -MD -MP -MF "$(DEPDIR)/mpd-compress.Tpo" -c -o mpd-compress.o `test -f 'compress.c' || echo '$(srcdir)/'`compress.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-compress.Tpo" "$(DEPDIR)/mpd-compress.Po"; else rm -f "$(DEPDIR)/mpd-compress.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='compress.c' object='mpd-compress.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-compress.o `test -f 'compress.c' || echo '$(srcdir)/'`compress.c

mpd-compress.obj: compress.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-compress.obj -MD -MP -MF "$(DEPDIR)/mpd-compress.Tpo" -c -o mpd-compress.obj `if test -f 'compress.c'; then $(CYGPATH_W) 'compress.c'; else $(CYGPATH_W) '$(srcdir)/compress.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-compress.Tpo" "$(DEPDIR)/mpd-compress.Po"; else rm -f "$(DEPDIR)/mpd-compress.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='compress.c' object='mpd-compress.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-compress.obj `if test -f 'compress.c'; then $(CYGPATH_W) 'compress.c'; else $(CYGPATH_W) '$(srcdir)/compress.c'; fi`

mpd-outputBuffer.o: outputBuffer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-outputBuffer.o -MD -MP -MF "$(DEPDIR)/mpd-outputBuffer.Tpo" -c -o mpd-outputBuffer.o `test -f 'outputBuffer.c' || echo '$(srcdir)/'`outputBuffer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-outputBuffer.Tpo" "$(DEPDIR)/mpd-outputBuffer.Po"; else rm -f "$(DEPDIR)/mpd-outputBuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='outputBuffer.c' object='mpd-outputBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-outputBuffer.o `test -f 'outputBuffer.c' || echo '$(srcdir)/'`outputBuffer.c

mpd-outputBuffer.obj: outputBuffer.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-outputBuffer.obj -MD -MP -MF "$(DEPDIR)/mpd-outputBuffer.Tpo" -c -o mpd-outputBuffer.obj `if test -f 'outputBuffer.c'; then $(CYGPATH_W) 'outputBuffer.c'; else $(CYGPATH_W) '$(srcdir)/outputBuffer.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-outputBuffer.Tpo" "$(DEPDIR)/mpd-outputBuffer.Po"; else rm -f "$(DEPDIR)/mpd-outputBuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='outputBuffer.c' object='mpd-outputBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-outputBuffer.obj `if test -f 'outputBuffer.c'; then $(CYGPATH_W) 'outputBuffer.c'; else $(CYGPATH_W) '$(srcdir)/outputBuffer.c'; fi`

mpd-path.o: path.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-path.o -MD -MP -MF "$(DEPDIR)/mpd-path.Tpo" -c -o mpd-path.o `test -f 'path.c' || echo '$(srcdir)/'`path.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-path.Tpo" "$(DEPDIR)/mpd-path.Po"; else rm -f "$(DEPDIR)/mpd-path.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='path.c' object='mpd-path.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-path.o `test -f 'path.c' || echo '$(srcdir)/'`path.c

mpd-path.obj: path.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-path.obj -MD -MP -MF "$(DEPDIR)/mpd-path.Tpo" -c -o mpd-path.obj `if test -f 'path.c'; then $(CYGPATH_W) 'path.c'; else $(CYGPATH_W) '$(srcdir)/path.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-path.Tpo" "$(DEPDIR)/mpd-path.Po"; else rm -f "$(DEPDIR)/mpd-path.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='path.c' object='mpd-path.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-path.obj `if test -f 'path.c'; then $(CYGPATH_W) 'path.c'; else $(CYGPATH_W) '$(srcdir)/path.c'; fi`

mpd-pcm_utils.o: pcm_utils.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-pcm_utils.o -MD -MP -MF "$(DEPDIR)/mpd-pcm_utils.Tpo" -c -o mpd-pcm_utils.o `test -f 'pcm_utils.c' || echo '$(srcdir)/'`pcm_utils.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-pcm_utils.Tpo" "$(DEPDIR)/mpd-pcm_utils.Po"; else rm -f "$(DEPDIR)/mpd-pcm_utils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pcm_utils.c' object='mpd-pcm_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-pcm_utils.o `test -f 'pcm_utils.c' || echo '$(srcdir)/'`pcm_utils.c

mpd-pcm_utils.obj: pcm_utils.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-pcm_utils.obj -MD -MP -MF "$(DEPDIR)/mpd-pcm_utils.Tpo" -c -o mpd-pcm_utils.obj `if test -f 'pcm_utils.c'; then $(CYGPATH_W) 'pcm_utils.c'; else $(CYGPATH_W) '$(srcdir)/pcm_utils.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-pcm_utils.Tpo" "$(DEPDIR)/mpd-pcm_utils.Po"; else rm -f "$(DEPDIR)/mpd-pcm_utils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pcm_utils.c' object='mpd-pcm_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-pcm_utils.obj `if test -f 'pcm_utils.c'; then $(CYGPATH_W) 'pcm_utils.c'; else $(CYGPATH_W) '$(srcdir)/pcm_utils.c'; fi`

mpd-permission.o: permission.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-permission.o -MD -MP -MF "$(DEPDIR)/mpd-permission.Tpo" -c -o mpd-permission.o `test -f 'permission.c' || echo '$(srcdir)/'`permission.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-permission.Tpo" "$(DEPDIR)/mpd-permission.Po"; else rm -f "$(DEPDIR)/mpd-permission.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='permission.c' object='mpd-permission.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-permission.o `test -f 'permission.c' || echo '$(srcdir)/'`permission.c

mpd-permission.obj: permission.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-permission.obj -MD -MP -MF "$(DEPDIR)/mpd-permission.Tpo" -c -o mpd-permission.obj `if test -f 'permission.c'; then $(CYGPATH_W) 'permission.c'; else $(CYGPATH_W) '$(srcdir)/permission.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-permission.Tpo" "$(DEPDIR)/mpd-permission.Po"; else rm -f "$(DEPDIR)/mpd-permission.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='permission.c' object='mpd-permission.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-permission.obj `if test -f 'permission.c'; then $(CYGPATH_W) 'permission.c'; else $(CYGPATH_W) '$(srcdir)/permission.c'; fi`

mpd-player.o: player.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-player.o -MD -MP -MF "$(DEPDIR)/mpd-player.Tpo" -c -o mpd-player.o `test -f 'player.c' || echo '$(srcdir)/'`player.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-player.Tpo" "$(DEPDIR)/mpd-player.Po"; else rm -f "$(DEPDIR)/mpd-player.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='player.c' object='mpd-player.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-player.o `test -f 'player.c' || echo '$(srcdir)/'`player.c

mpd-player.obj: player.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-player.obj -MD -MP -MF "$(DEPDIR)/mpd-player.Tpo" -c -o mpd-player.obj `if test -f 'player.c'; then $(CYGPATH_W) 'player.c'; else $(CYGPATH_W) '$(srcdir)/player.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-player.Tpo" "$(DEPDIR)/mpd-player.Po"; else rm -f "$(DEPDIR)/mpd-player.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='player.c' object='mpd-player.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-player.obj `if test -f 'player.c'; then $(CYGPATH_W) 'player.c'; else $(CYGPATH_W) '$(srcdir)/player.c'; fi`

mpd-playerData.o: playerData.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-playerData.o -MD -MP -MF "$(DEPDIR)/mpd-playerData.Tpo" -c -o mpd-playerData.o `test -f 'playerData.c' || echo '$(srcdir)/'`playerData.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-playerData.Tpo" "$(DEPDIR)/mpd-playerData.Po"; else rm -f "$(DEPDIR)/mpd-playerData.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playerData.c' object='mpd-playerData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playerData.o `test -f 'playerData.c' || echo '$(srcdir)/'`playerData.c

mpd-playerData.obj: playerData.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-playerData.obj -MD -MP -MF "$(DEPDIR)/mpd-playerData.Tpo" -c -o mpd-playerData.obj `if test -f 'playerData.c'; then $(CYGPATH_W) 'playerData.c'; else $(CYGPATH_W) '$(srcdir)/playerData.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-playerData.Tpo" "$(DEPDIR)/mpd-playerData.Po"; else rm -f "$(DEPDIR)/mpd-playerData.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playerData.c' object='mpd-playerData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playerData.obj `if test -f 'playerData.c'; then $(CYGPATH_W) 'playerData.c'; else $(CYGPATH_W) '$(srcdir)/playerData.c'; fi`

mpd-playlist.o: playlist.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-playlist.o -MD -MP -MF "$(DEPDIR)/mpd-playlist.Tpo" -c -o mpd-playlist.o `test -f 'playlist.c' || echo '$(srcdir)/'`playlist.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-playlist.Tpo" "$(DEPDIR)/mpd-playlist.Po"; else rm -f "$(DEPDIR)/mpd-playlist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist.c' object='mpd-playlist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playlist.o `test -f 'playlist.c' || echo '$(srcdir)/'`playlist.c

mpd-playlist.obj: playlist.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-playlist.obj -MD -MP -MF "$(DEPDIR)/mpd-playlist.Tpo" -c -o mpd-playlist.obj `if test -f 'playlist.c'; then $(CYGPATH_W) 'playlist.c'; else $(CYGPATH_W) '$(srcdir)/playlist.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-playlist.Tpo" "$(DEPDIR)/mpd-playlist.Po"; else rm -f "$(DEPDIR)/mpd-playlist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='playlist.c' object='mpd-playlist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-playlist.obj `if test -f 'playlist.c'; then $(CYGPATH_W) 'playlist.c'; else $(CYGPATH_W) '$(srcdir)/playlist.c'; fi`

mpd-replayGain.o: replayGain.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-replayGain.o -MD -MP -MF "$(DEPDIR)/mpd-replayGain.Tpo" -c -o mpd-replayGain.o `test -f 'replayGain.c' || echo '$(srcdir)/'`replayGain.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-replayGain.Tpo" "$(DEPDIR)/mpd-replayGain.Po"; else rm -f "$(DEPDIR)/mpd-replayGain.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='replayGain.c' object='mpd-replayGain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-replayGain.o `test -f 'replayGain.c' || echo '$(srcdir)/'`replayGain.c

mpd-replayGain.obj: replayGain.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-replayGain.obj -MD -MP -MF "$(DEPDIR)/mpd-replayGain.Tpo" -c -o mpd-replayGain.obj `if test -f 'replayGain.c'; then $(CYGPATH_W) 'replayGain.c'; else $(CYGPATH_W) '$(srcdir)/replayGain.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-replayGain.Tpo" "$(DEPDIR)/mpd-replayGain.Po"; else rm -f "$(DEPDIR)/mpd-replayGain.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='replayGain.c' object='mpd-replayGain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-replayGain.obj `if test -f 'replayGain.c'; then $(CYGPATH_W) 'replayGain.c'; else $(CYGPATH_W) '$(srcdir)/replayGain.c'; fi`

mpd-sig_handlers.o: sig_handlers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-sig_handlers.o -MD -MP -MF "$(DEPDIR)/mpd-sig_handlers.Tpo" -c -o mpd-sig_handlers.o `test -f 'sig_handlers.c' || echo '$(srcdir)/'`sig_handlers.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-sig_handlers.Tpo" "$(DEPDIR)/mpd-sig_handlers.Po"; else rm -f "$(DEPDIR)/mpd-sig_handlers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sig_handlers.c' object='mpd-sig_handlers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sig_handlers.o `test -f 'sig_handlers.c' || echo '$(srcdir)/'`sig_handlers.c

mpd-sig_handlers.obj: sig_handlers.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-sig_handlers.obj -MD -MP -MF "$(DEPDIR)/mpd-sig_handlers.Tpo" -c -o mpd-sig_handlers.obj `if test -f 'sig_handlers.c'; then $(CYGPATH_W) 'sig_handlers.c'; else $(CYGPATH_W) '$(srcdir)/sig_handlers.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-sig_handlers.Tpo" "$(DEPDIR)/mpd-sig_handlers.Po"; else rm -f "$(DEPDIR)/mpd-sig_handlers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sig_handlers.c' object='mpd-sig_handlers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sig_handlers.obj `if test -f 'sig_handlers.c'; then $(CYGPATH_W) 'sig_handlers.c'; else $(CYGPATH_W) '$(srcdir)/sig_handlers.c'; fi`

mpd-signal_check.o: signal_check.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-signal_check.o -MD -MP -MF "$(DEPDIR)/mpd-signal_check.Tpo" -c -o mpd-signal_check.o `test -f 'signal_check.c' || echo '$(srcdir)/'`signal_check.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-signal_check.Tpo" "$(DEPDIR)/mpd-signal_check.Po"; else rm -f "$(DEPDIR)/mpd-signal_check.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_check.c' object='mpd-signal_check.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-signal_check.o `test -f 'signal_check.c' || echo '$(srcdir)/'`signal_check.c

mpd-signal_check.obj: signal_check.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-signal_check.obj -MD -MP -MF "$(DEPDIR)/mpd-signal_check.Tpo" -c -o mpd-signal_check.obj `if test -f 'signal_check.c'; then $(CYGPATH_W) 'signal_check.c'; else $(CYGPATH_W) '$(srcdir)/signal_check.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-signal_check.Tpo" "$(DEPDIR)/mpd-signal_check.Po"; else rm -f "$(DEPDIR)/mpd-signal_check.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='signal_check.c' object='mpd-signal_check.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-signal_check.obj `if test -f 'signal_check.c'; then $(CYGPATH_W) 'signal_check.c'; else $(CYGPATH_W) '$(srcdir)/signal_check.c'; fi`

mpd-sllist.o: sllist.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-sllist.o -MD -MP -MF "$(DEPDIR)/mpd-sllist.Tpo" -c -o mpd-sllist.o `test -f 'sllist.c' || echo '$(srcdir)/'`sllist.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-sllist.Tpo" "$(DEPDIR)/mpd-sllist.Po"; else rm -f "$(DEPDIR)/mpd-sllist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sllist.c' object='mpd-sllist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sllist.o `test -f 'sllist.c' || echo '$(srcdir)/'`sllist.c

mpd-sllist.obj: sllist.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-sllist.obj -MD -MP -MF "$(DEPDIR)/mpd-sllist.Tpo" -c -o mpd-sllist.obj `if test -f 'sllist.c'; then $(CYGPATH_W) 'sllist.c'; else $(CYGPATH_W) '$(srcdir)/sllist.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-sllist.Tpo" "$(DEPDIR)/mpd-sllist.Po"; else rm -f "$(DEPDIR)/mpd-sllist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sllist.c' object='mpd-sllist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-sllist.obj `if test -f 'sllist.c'; then $(CYGPATH_W) 'sllist.c'; else $(CYGPATH_W) '$(srcdir)/sllist.c'; fi`

mpd-song.o: song.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-song.o -MD -MP -MF "$(DEPDIR)/mpd-song.Tpo" -c -o mpd-song.o `test -f 'song.c' || echo '$(srcdir)/'`song.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-song.Tpo" "$(DEPDIR)/mpd-song.Po"; else rm -f "$(DEPDIR)/mpd-song.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='song.c' object='mpd-song.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-song.o `test -f 'song.c' || echo '$(srcdir)/'`song.c

mpd-song.obj: song.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-song.obj -MD -MP -MF "$(DEPDIR)/mpd-song.Tpo" -c -o mpd-song.obj `if test -f 'song.c'; then $(CYGPATH_W) 'song.c'; else $(CYGPATH_W) '$(srcdir)/song.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-song.Tpo" "$(DEPDIR)/mpd-song.Po"; else rm -f "$(DEPDIR)/mpd-song.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='song.c' object='mpd-song.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-song.obj `if test -f 'song.c'; then $(CYGPATH_W) 'song.c'; else $(CYGPATH_W) '$(srcdir)/song.c'; fi`

mpd-state_file.o: state_file.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-state_file.o -MD -MP -MF "$(DEPDIR)/mpd-state_file.Tpo" -c -o mpd-state_file.o `test -f 'state_file.c' || echo '$(srcdir)/'`state_file.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-state_file.Tpo" "$(DEPDIR)/mpd-state_file.Po"; else rm -f "$(DEPDIR)/mpd-state_file.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='state_file.c' object='mpd-state_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-state_file.o `test -f 'state_file.c' || echo '$(srcdir)/'`state_file.c

mpd-state_file.obj: state_file.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-state_file.obj -MD -MP -MF "$(DEPDIR)/mpd-state_file.Tpo" -c -o mpd-state_file.obj `if test -f 'state_file.c'; then $(CYGPATH_W) 'state_file.c'; else $(CYGPATH_W) '$(srcdir)/state_file.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-state_file.Tpo" "$(DEPDIR)/mpd-state_file.Po"; else rm -f "$(DEPDIR)/mpd-state_file.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='state_file.c' object='mpd-state_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-state_file.obj `if test -f 'state_file.c'; then $(CYGPATH_W) 'state_file.c'; else $(CYGPATH_W) '$(srcdir)/state_file.c'; fi`

mpd-stats.o: stats.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-stats.o -MD -MP -MF "$(DEPDIR)/mpd-stats.Tpo" -c -o mpd-stats.o `test -f 'stats.c' || echo '$(srcdir)/'`stats.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-stats.Tpo" "$(DEPDIR)/mpd-stats.Po"; else rm -f "$(DEPDIR)/mpd-stats.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='stats.c' object='mpd-stats.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-stats.o `test -f 'stats.c' || echo '$(srcdir)/'`stats.c

mpd-stats.obj: stats.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-stats.obj -MD -MP -MF "$(DEPDIR)/mpd-stats.Tpo" -c -o mpd-stats.obj `if test -f 'stats.c'; then $(CYGPATH_W) 'stats.c'; else $(CYGPATH_W) '$(srcdir)/stats.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-stats.Tpo" "$(DEPDIR)/mpd-stats.Po"; else rm -f "$(DEPDIR)/mpd-stats.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='stats.c' object='mpd-stats.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-stats.obj `if test -f 'stats.c'; then $(CYGPATH_W) 'stats.c'; else $(CYGPATH_W) '$(srcdir)/stats.c'; fi`

mpd-tag.o: tag.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-tag.o -MD -MP -MF "$(DEPDIR)/mpd-tag.Tpo" -c -o mpd-tag.o `test -f 'tag.c' || echo '$(srcdir)/'`tag.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-tag.Tpo" "$(DEPDIR)/mpd-tag.Po"; else rm -f "$(DEPDIR)/mpd-tag.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tag.c' object='mpd-tag.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tag.o `test -f 'tag.c' || echo '$(srcdir)/'`tag.c

mpd-tag.obj: tag.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-tag.obj -MD -MP -MF "$(DEPDIR)/mpd-tag.Tpo" -c -o mpd-tag.obj `if test -f 'tag.c'; then $(CYGPATH_W) 'tag.c'; else $(CYGPATH_W) '$(srcdir)/tag.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-tag.Tpo" "$(DEPDIR)/mpd-tag.Po"; else rm -f "$(DEPDIR)/mpd-tag.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tag.c' object='mpd-tag.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tag.obj `if test -f 'tag.c'; then $(CYGPATH_W) 'tag.c'; else $(CYGPATH_W) '$(srcdir)/tag.c'; fi`

mpd-tagTracker.o: tagTracker.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-tagTracker.o -MD -MP -MF "$(DEPDIR)/mpd-tagTracker.Tpo" -c -o mpd-tagTracker.o `test -f 'tagTracker.c' || echo '$(srcdir)/'`tagTracker.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-tagTracker.Tpo" "$(DEPDIR)/mpd-tagTracker.Po"; else rm -f "$(DEPDIR)/mpd-tagTracker.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tagTracker.c' object='mpd-tagTracker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tagTracker.o `test -f 'tagTracker.c' || echo '$(srcdir)/'`tagTracker.c

mpd-tagTracker.obj: tagTracker.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-tagTracker.obj -MD -MP -MF "$(DEPDIR)/mpd-tagTracker.Tpo" -c -o mpd-tagTracker.obj `if test -f 'tagTracker.c'; then $(CYGPATH_W) 'tagTracker.c'; else $(CYGPATH_W) '$(srcdir)/tagTracker.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-tagTracker.Tpo" "$(DEPDIR)/mpd-tagTracker.Po"; else rm -f "$(DEPDIR)/mpd-tagTracker.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tagTracker.c' object='mpd-tagTracker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tagTracker.obj `if test -f 'tagTracker.c'; then $(CYGPATH_W) 'tagTracker.c'; else $(CYGPATH_W) '$(srcdir)/tagTracker.c'; fi`

mpd-tree.o: tree.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-tree.o -MD -MP -MF "$(DEPDIR)/mpd-tree.Tpo" -c -o mpd-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-tree.Tpo" "$(DEPDIR)/mpd-tree.Po"; else rm -f "$(DEPDIR)/mpd-tree.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tree.c' object='mpd-tree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tree.o `test -f 'tree.c' || echo '$(srcdir)/'`tree.c

mpd-tree.obj: tree.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-tree.obj -MD -MP -MF "$(DEPDIR)/mpd-tree.Tpo" -c -o mpd-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-tree.Tpo" "$(DEPDIR)/mpd-tree.Po"; else rm -f "$(DEPDIR)/mpd-tree.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tree.c' object='mpd-tree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-tree.obj `if test -f 'tree.c'; then $(CYGPATH_W) 'tree.c'; else $(CYGPATH_W) '$(srcdir)/tree.c'; fi`

mpd-utils.o: utils.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-utils.o -MD -MP -MF "$(DEPDIR)/mpd-utils.Tpo" -c -o mpd-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-utils.Tpo" "$(DEPDIR)/mpd-utils.Po"; else rm -f "$(DEPDIR)/mpd-utils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utils.c' object='mpd-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

mpd-utils.obj: utils.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-utils.obj -MD -MP -MF "$(DEPDIR)/mpd-utils.Tpo" -c -o mpd-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-utils.Tpo" "$(DEPDIR)/mpd-utils.Po"; else rm -f "$(DEPDIR)/mpd-utils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utils.c' object='mpd-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

mpd-volume.o: volume.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-volume.o -MD -MP -MF "$(DEPDIR)/mpd-volume.Tpo" -c -o mpd-volume.o `test -f 'volume.c' || echo '$(srcdir)/'`volume.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-volume.Tpo" "$(DEPDIR)/mpd-volume.Po"; else rm -f "$(DEPDIR)/mpd-volume.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='volume.c' object='mpd-volume.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-volume.o `test -f 'volume.c' || echo '$(srcdir)/'`volume.c

mpd-volume.obj: volume.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-volume.obj -MD -MP -MF "$(DEPDIR)/mpd-volume.Tpo" -c -o mpd-volume.obj `if test -f 'volume.c'; then $(CYGPATH_W) 'volume.c'; else $(CYGPATH_W) '$(srcdir)/volume.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-volume.Tpo" "$(DEPDIR)/mpd-volume.Po"; else rm -f "$(DEPDIR)/mpd-volume.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='volume.c' object='mpd-volume.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-volume.obj `if test -f 'volume.c'; then $(CYGPATH_W) 'volume.c'; else $(CYGPATH_W) '$(srcdir)/volume.c'; fi`

mpd-utf8.o: utf8.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-utf8.o -MD -MP -MF "$(DEPDIR)/mpd-utf8.Tpo" -c -o mpd-utf8.o `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-utf8.Tpo" "$(DEPDIR)/mpd-utf8.Po"; else rm -f "$(DEPDIR)/mpd-utf8.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utf8.c' object='mpd-utf8.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utf8.o `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c

mpd-utf8.obj: utf8.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-utf8.obj -MD -MP -MF "$(DEPDIR)/mpd-utf8.Tpo" -c -o mpd-utf8.obj `if test -f 'utf8.c'; then $(CYGPATH_W) 'utf8.c'; else $(CYGPATH_W) '$(srcdir)/utf8.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-utf8.Tpo" "$(DEPDIR)/mpd-utf8.Po"; else rm -f "$(DEPDIR)/mpd-utf8.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utf8.c' object='mpd-utf8.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-utf8.obj `if test -f 'utf8.c'; then $(CYGPATH_W) 'utf8.c'; else $(CYGPATH_W) '$(srcdir)/utf8.c'; fi`

mpd-zeroconf.o: zeroconf.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-zeroconf.o -MD -MP -MF "$(DEPDIR)/mpd-zeroconf.Tpo" -c -o mpd-zeroconf.o `test -f 'zeroconf.c' || echo '$(srcdir)/'`zeroconf.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-zeroconf.Tpo" "$(DEPDIR)/mpd-zeroconf.Po"; else rm -f "$(DEPDIR)/mpd-zeroconf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='zeroconf.c' object='mpd-zeroconf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-zeroconf.o `test -f 'zeroconf.c' || echo '$(srcdir)/'`zeroconf.c

mpd-zeroconf.obj: zeroconf.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-zeroconf.obj -MD -MP -MF "$(DEPDIR)/mpd-zeroconf.Tpo" -c -o mpd-zeroconf.obj `if test -f 'zeroconf.c'; then $(CYGPATH_W) 'zeroconf.c'; else $(CYGPATH_W) '$(srcdir)/zeroconf.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-zeroconf.Tpo" "$(DEPDIR)/mpd-zeroconf.Po"; else rm -f "$(DEPDIR)/mpd-zeroconf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='zeroconf.c' object='mpd-zeroconf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-zeroconf.obj `if test -f 'zeroconf.c'; then $(CYGPATH_W) 'zeroconf.c'; else $(CYGPATH_W) '$(srcdir)/zeroconf.c'; fi`

mpd-locate.o: locate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-locate.o -MD -MP -MF "$(DEPDIR)/mpd-locate.Tpo" -c -o mpd-locate.o `test -f 'locate.c' || echo '$(srcdir)/'`locate.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-locate.Tpo" "$(DEPDIR)/mpd-locate.Po"; else rm -f "$(DEPDIR)/mpd-locate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='locate.c' object='mpd-locate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-locate.o `test -f 'locate.c' || echo '$(srcdir)/'`locate.c

mpd-locate.obj: locate.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-locate.obj -MD -MP -MF "$(DEPDIR)/mpd-locate.Tpo" -c -o mpd-locate.obj `if test -f 'locate.c'; then $(CYGPATH_W) 'locate.c'; else $(CYGPATH_W) '$(srcdir)/locate.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-locate.Tpo" "$(DEPDIR)/mpd-locate.Po"; else rm -f "$(DEPDIR)/mpd-locate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='locate.c' object='mpd-locate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-locate.obj `if test -f 'locate.c'; then $(CYGPATH_W) 'locate.c'; else $(CYGPATH_W) '$(srcdir)/locate.c'; fi`

mpd-storedPlaylist.o: storedPlaylist.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-storedPlaylist.o -MD -MP -MF "$(DEPDIR)/mpd-storedPlaylist.Tpo" -c -o mpd-storedPlaylist.o `test -f 'storedPlaylist.c' || echo '$(srcdir)/'`storedPlaylist.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-storedPlaylist.Tpo" "$(DEPDIR)/mpd-storedPlaylist.Po"; else rm -f "$(DEPDIR)/mpd-storedPlaylist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='storedPlaylist.c' object='mpd-storedPlaylist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-storedPlaylist.o `test -f 'storedPlaylist.c' || echo '$(srcdir)/'`storedPlaylist.c

mpd-storedPlaylist.obj: storedPlaylist.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -MT mpd-storedPlaylist.obj -MD -MP -MF "$(DEPDIR)/mpd-storedPlaylist.Tpo" -c -o mpd-storedPlaylist.obj `if test -f 'storedPlaylist.c'; then $(CYGPATH_W) 'storedPlaylist.c'; else $(CYGPATH_W) '$(srcdir)/storedPlaylist.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mpd-storedPlaylist.Tpo" "$(DEPDIR)/mpd-storedPlaylist.Po"; else rm -f "$(DEPDIR)/mpd-storedPlaylist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='storedPlaylist.c' object='mpd-storedPlaylist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mpd_CFLAGS) $(CFLAGS) -c -o mpd-storedPlaylist.obj `if test -f 'storedPlaylist.c'; then $(CYGPATH_W) 'storedPlaylist.c'; else $(CYGPATH_W) '$(srcdir)/storedPlaylist.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

sparse-check:
	for i in $(mpd_SOURCES); \
	do \
		$(SPARSE) -I. $(mpd_CFLAGS) $(SPARSE_FLAGS) $(srcdir)/$$i || exit; \
	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
