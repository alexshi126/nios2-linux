Index: src/video/fbcon/SDL_fbevents.c
===================================================================
--- src/video/fbcon/SDL_fbevents.c	(revision 122)
+++ src/video/fbcon/SDL_fbevents.c	(working copy)
@@ -326,11 +326,19 @@
 	MOUSE_MS,
 	MOUSE_BM,
 	MOUSE_ELO,
+	MOUSE_TSLIB,
 	NUM_MOUSE_DRVS
 } mouse_drv = MOUSE_NONE;
 
 void FB_CloseMouse(_THIS)
 {
+#ifdef HAVE_TSLIB
+	if (ts_dev != NULL) {
+		ts_close(ts_dev);
+		ts_dev = NULL;
+	}
+#endif /* HAVE_TSLIB */
+
 	if ( mouse_fd > 0 ) {
 		close(mouse_fd);
 	}
@@ -509,6 +517,25 @@
 	mousedev = getenv("SDL_MOUSEDEV");
 	mouse_fd = -1;
 
+#ifdef HAVE_TSLIB
+	if ((mousedrv != NULL) && (strcmp(mousedrv, "TSLIB") == 0)) {
+		if (mousedev == NULL) mousedev = getenv("TSLIB_TSDEVICE");
+		if (mousedev != NULL) {
+			ts_dev = ts_open(mousedev, 1);
+			if ((ts_dev != NULL) && (ts_config(ts_dev) >= 0)) {
+#ifdef DEBUG_MOUSE
+				fprintf(stderr, "Using tslib touchscreen\n");
+#endif
+				mouse_drv = MOUSE_TSLIB;
+				mouse_fd = ts_fd(ts_dev);
+				return mouse_fd;
+			}
+		}
+		mouse_drv = MOUSE_NONE;
+		return mouse_fd;
+	}
+#endif /* HAVE_TSLIB */
+
 	/* ELO TOUCHSCREEN SUPPORT */
 
 	if( (mousedrv != NULL) && (strcmp(mousedrv, "ELO") == 0) ) {
@@ -651,6 +678,23 @@
 	}
 }
 
+/* Handle input from tslib */
+#ifdef HAVE_TSLIB
+static void handle_tslib(_THIS)
+{
+	struct ts_sample sample;
+	int button;
+
+	while (ts_read(ts_dev, &sample, 1) > 0) {
+		button = (sample.pressure > 0) ? 1 : 0;
+		button <<= 2;	/* must report it as button 3 */
+		FB_vgamousecallback(button, 0, sample.x, sample.y);
+	}
+	return;
+}
+#endif /* HAVE_TSLIB */
+
+
 /* For now, use MSC, PS/2, and MS protocols
    Driver adapted from the SVGAlib mouse driver code (taken from gpm, etc.)
  */
@@ -687,6 +731,10 @@
 			packetsize = ELO_PACKET_SIZE;
 			relative = 0;
 			break;
+		case MOUSE_TSLIB:
+#ifdef HAVE_TSLIB
+			handle_tslib(this);
+#endif
 		case NUM_MOUSE_DRVS:
 			/* Uh oh.. */
 			packetsize = 0;
Index: src/video/fbcon/SDL_fbvideo.h
===================================================================
--- src/video/fbcon/SDL_fbvideo.h	(revision 122)
+++ src/video/fbcon/SDL_fbvideo.h	(working copy)
@@ -36,10 +36,13 @@
 #include "SDL_mutex.h"
 #include "SDL_sysvideo.h"
 
+#ifdef HAVE_TSLIB
+#include "tslib.h"
+#endif
+ 
 /* Hidden "this" pointer for the video functions */
 #define _THIS	SDL_VideoDevice *this
 
-
 /* This is the structure we use to keep track of video memory */
 typedef struct vidmem_bucket {
 	struct vidmem_bucket *prev;
@@ -65,7 +68,9 @@
 	struct termios saved_kbd_termios;
 
 	int mouse_fd;
-
+#ifdef HAVE_TSLIB
+	struct tsdev *ts_dev;
+#endif
 	char *mapped_mem;
 	int mapped_memlen;
 	int mapped_offset;
@@ -95,6 +100,9 @@
 #define saved_kbd_mode		(this->hidden->saved_kbd_mode)
 #define saved_kbd_termios	(this->hidden->saved_kbd_termios)
 #define mouse_fd		(this->hidden->mouse_fd)
+#ifdef HAVE_TSLIB
+#define ts_dev			(this->hidden->ts_dev)
+#endif /* HAVE_TSLIB */
 #define cache_vinfo		(this->hidden->cache_vinfo)
 #define saved_vinfo		(this->hidden->saved_vinfo)
 #define saved_cmaplen		(this->hidden->saved_cmaplen)
Index: include/SDL_byteorder.h
===================================================================
--- include/SDL_byteorder.h	(revision 122)
+++ include/SDL_byteorder.h	(working copy)
@@ -46,6 +46,7 @@
     (defined(__mips__) && defined(__MIPSEL__)) || \
      defined(__SYMBIAN32__) || \
      defined(__x86_64__) || \
+     defined(__bfin__) || \
      defined(__LITTLE_ENDIAN__)
 #define SDL_BYTEORDER	SDL_LIL_ENDIAN
 #else
